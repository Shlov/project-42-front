{"version":3,"file":"static/js/485.6f93aac6.chunk.js","mappings":"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","sources":["components/ModalApproveAction/ModalApproveAction.styled.jsx","components/ModalApproveAction/ModalApproveAction.js","components/Logout/Logout.styled.jsx","components/Logout/Logout.js","Redux/pets/selectors.js","components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.js","components/PetsData/PetsData.styled.js","components/PetsData/PetsData.js","components/UserData/UserData.styled.jsx","components/UserData/UserData.js","pages/User.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(43, 43, 43, 0.6);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: 280px;\n  \n  background-color: var(--cl-almost-white);\n  box-shadow: var(--shadow-default);\n  border-radius: 20px;\n\n  @media (min-width: 768px) {\n    width: ${props => props.report ? \"681px\" : \"608px\"};\n    border-radius: 40px;\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n`\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  padding: 0;\n\n  background-color: var(--cl-almost-white);\n  color: var(--cl-blue-link);\n  border: none;\n\n  cursor: pointer;\n\n  transition: transform var(--animat);\n\n  @media (min-width: 768px) {\n    top: 29px;\n    right: 29px;\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    transform: scale(1.2);\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n`;\n","// Перевикористовуємий компонент, що рендерить у модальному вікні питання, отримане у вигляді childrens,\n// та 2 функціональні кнопки. Модальне вікно повинно закриватись по кліку на кнопку Cancel,\n// по кліку на кнопку закриття, клік по бекдропу, а також клік по Escape.\n// По кліку на Yes необхідно викликати функцію, передану в ModalApproveAction у вигляді props на випадок згоди користувача\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Button, CloseIcon, Content, Modal, Overlay } from './ModalApproveAction.styled';\nimport icons from 'images/icons.svg';\n\nexport const ModalApproveAction = ({ children, onClose}) => {\n  //   пропс onClose це функція toggleModal,\n  //   яку потрібно передати компоненту ModalApproveAction\n  //   toggleModal - змінює стейт isOpen\n\n  const onBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n    document.body.style.overflow= \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"visible\";\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [onClose]);\n\n  return (\n    <>\n      <Overlay onClick={onBackdropClose}>\n        <Modal >\n          <Button type=\"button\" apia-label=\"close\" onClick={onClose}>\n            <CloseIcon>\n              <use href={icons + '#cross-small'} />\n            </CloseIcon>\n          </Button>\n          <Content>{children}</Content>\n        </Modal>\n      </Overlay>\n    </>\n  );\n};\n\nModalApproveAction.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node, \n};\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 77px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 108px 0 108px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-size: 24px;\n  line-height: 33px;\n  font-weight: 500;\n\n  padding-bottom: 48px;\n\n  @media (min-width: 768px) {\n    font-weight: 700;\n    font-size: 36px;\n    line-height: 49px;\n    padding-bottom: 48px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 17px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  width: 256px;\n  height: 40px;\n  padding: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background: transparent;\n\n  @media (min-width: 768px) {\n    width: 129px;\n  }\n\n  transition: background var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: var(--cl-background);\n    background: var(--gr-blue);\n    border: none;\n    transition: background var(--animat) 1000ms;\n  }\n`;\n\nexport const ButtonYes = styled(Button)`\n  border: none;\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  cursor: pointer;\n\n  transition: background var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n    transition: background var(--animat) 1000ms;\n  }\n`;\n\nexport const Arrow = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\nexport const ArrowBack = styled.svg`\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const BtnLogout = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n\n  width: 98px;\n  height: 30px;\n\n  font-weight: 500;\n  font-family: 'Manrope';\n  font-size: 16px;\n\n  border: none;\n  background-color: transparent;\n`;\n","// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Arrow,\n  Button,\n  ButtonWrap,\n  ModalContent,\n  TitleModal,\n  BtnLogout,\n  //Ірина\n  ArrowBack,\n  \n  //Олексій\n  ButtonYes,\n} from './Logout.styled';\n\n//Олексій\n// } from './UserPage.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\n// import { ModalCongrats } from 'components/ModalCongrats/ModalCongrats';\n\nexport const LogoutBtn = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    console.log('Передаємо екшн');\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal} report>\n          <ModalContent>\n            <TitleModal>Already leaving?</TitleModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <ButtonYes type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Arrow>\n                  <use href={icons + '#logout'} />\n                </Arrow>\n              </ButtonYes>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalApproveAction>\n      )}\n\n      <BtnLogout type=\"button\" onClick={toggleModal}>\n      <ArrowBack><use href={icons + '#logout'}/></ArrowBack>\n        LogOut\n      </BtnLogout>\n\n      {/* <ModalCongrats /> */}\n    </>\n  );\n};\n","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectPets = state => state.pets","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  padding: 16px 20px 40px 20px;\n  width: 280px;\n  background-color: var(--cl-almost-white);\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    width: 703px;\n    padding: 20px;\n    border-radius: 40px;\n  }\n  @media (min-width: 1280px) {\n    display: flex;\n    width: 821px;\n  }\n`;\nexport const Photo = styled.img`\n   background-color: gray;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 128px;\n    height: 128px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 161px;\n    height: 161px;\n    margin-right: 32px;\n    border-radius: 40px;\n  }\n`;\n\nexport const Description = styled.div`\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 515px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 580px;\n  }\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 12px;\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\nexport const Breed = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport const LastLabel = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\n\nexport const Text = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    \n  }\n`;\nexport const LastText = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 272px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-color: var(--cl-almost-white);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 0;\n  right: 0;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n\n  @media screen and (min-width: 768px) {\n    top: 0;\n    right: 0;\n  }\n`;\n\nexport const ModalContainer = styled.div`\n  padding: 60px 5px 60px 5px;\n  color: var(--cl-black);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  letter-spacing: -0.01em;\n`;\nexport const ModalTitle = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  text-align: center;\n  line-height: 1.36;\n  padding: 0;\n  margin: 0px;\n  margin-bottom: 40px;\n`;\n\nexport const ModalText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  margin-bottom: 48px;\n`;\nexport const ModalItem = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n`;\n\nexport const ModalButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 129px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n}\n`;\n\nexport const ModalIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { deletePet } from 'Redux/pets/operations';\nimport icons from 'images/icons.svg';\nimport {\n  Card,\n  Photo,\n  Label,\n  LastLabel,\n  Text,\n  Icon,\n  Btn,\n  Breed,\n  Description,\n  LastText,\n  ModalContainer,\n  ModalTitle,\n  ModalText,\n  ModalItem,\n  ModalButton,\n  Button,\n  ModalIcon,\n} from './PetsItem.styled';\n\nexport const PetsItem = ({ item }) => {\n  const dispatch = useDispatch()\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleDeletePet = () => {\n    dispatch(deletePet(item.id));\n  };\n  \n  return (\n    <Card>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal}>\n          <ModalContainer>\n            <ModalTitle>Delete your pet?</ModalTitle>\n            <ModalText>\n              Are you sure want to delete a{' '}\n              <ModalItem>“{item.name}?”</ModalItem>\n              <br />\n              You can`t undo this action.\n            </ModalText>\n            <ModalButton>\n              <Button type=\"button\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <Button type=\"button\" onClick={handleDeletePet}>\n                Yes\n                <ModalIcon>\n                  <use href={icons + '#trash'} />\n                </ModalIcon>\n              </Button>\n            </ModalButton>\n          </ModalContainer>\n        </ModalApproveAction>\n      )}\n      <div>\n        <Photo src={item.avatarURL} alt={item.name} width=\"240\" height=\"240\" />\n        <Btn type=\"button\" onClick={toggleModal}>\n          <Icon>\n            <use href={icons + '#trash'} />\n          </Icon>\n        </Btn>\n      </div>\n\n      <Description>\n        <Label>\n          Name: <Text>{item.name}</Text>\n        </Label>\n        <Label>\n          Date of birth: <Text>{item.birthday}</Text>\n        </Label>\n        <Breed>\n          Breed: <Text>{item.breed}</Text>\n        </Breed>\n        <LastLabel>\n          Comments: &nbsp;<LastText>{item.comments}</LastText>\n        </LastLabel>\n      </Description>\n    </Card>\n  );\n};\n\nPetsItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    breed: PropTypes.string.isRequired,\n    comments: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\ngap: 20px;\n`","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPets } from 'Redux/pets/selectors';\nimport { PetsItem } from 'components/PetsItem/PetsItem';\nimport { List } from './PetsList.styled';\nimport { fetchPets } from 'Redux/pets/operations';\n\n\n// const pets = [\n//   {\n//     id: '1',\n//     photo: '',\n//     name: 'Jack',\n//     birthDate: '15.12.2011',\n//     breed: 'hasky',\n//     comments: \"Jack is a handsome Basenji with short, shiny red fur and perky ears. He's an active and intelligent dog that loves to explore and play. Jack is independent and strong-willed, but also affectionate and loyal to his family. He's a curious and energetic companion that brings joy and adventure to his family's life.\"\n\n//   },\n//   {\n//     id: '2',\n//     photo: '',\n//     name: 'Max',\n//     birthDate: '15.12.2011',\n//     breed: 'hasky',\n//     comments: \"Jack is a handsome Basenji with short, shiny red fur and perky ears. He's an active and intelligent dog that loves to explore and play. Jack is independent and strong-willed, but also affectionate and loyal to his family. He's a curious and energetic companion that brings joy and adventure to his family's life.\"\n\n//   }\n// ]\n\nexport const PetsList = () => {\n  const pets = useSelector(selectPets);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPets())\n  }, [dispatch])\n\n  \n  return (\n    <List>\n      {pets.map(contact => (\n        <li key={contact.id}>\n          <PetsItem item={contact} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 280px;\n  margin: auto;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    width: 703px;\n    margin-bottom: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 20px;\n    width: 821px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\nexport const AddButton = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 129px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-background);\n  background-color: var(--cl-blue-link);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n`;\n\nexport const AddIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-background);\n  fill: transparent;\n`;\n","import { Link } from 'react-router-dom';\n\nimport { PetsList } from 'components/PetsList/PetsList';\nimport { Container, AddButton, AddIcon, Title } from './PetsData.styled';\nimport { useState } from 'react';\nimport icons from 'images/icons.svg';\n\nexport const PetsData = () => {\n  const [currentPage, setCurrentPage] = useState('');\n  const [showPreviousPage, setShowPreviousPage] = useState(true);\n\n  const handleChangePage = page => {\n    setCurrentPage(page);\n    setShowPreviousPage(false);\n  };\n\n  return (\n    <>\n      {showPreviousPage && (\n        <div>\n          <Container>\n            <Title>My Pets:</Title>\n            <Link to=\"/add-pet\" onClick={() => handleChangePage(currentPage)}>\n              <AddButton type=\"button\">\n                Add Pet\n                <AddIcon>\n                  <use href={icons + '#plus-small'} />\n                </AddIcon>\n              </AddButton>\n            </Link>\n          </Container>\n          <PetsList />\n        </div>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const MainContainer = styled.div`\npadding: 20px;\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nmargin: 0 auto;\n\n@media screen and (min-width: 767px) {\n \n  padding: 32px;\n  width: 768px;\n\n}\n@media screen and (min-width: 991px) {\n  flex-direction: row;\n  padding: 30px, 16px, 30px, 16px;\n  width: 1280px;\n  \n  \n}\n\n`\nexport const Box = styled.div`\nmargin: 0 auto;\n\n@media screen and (min-width: 767px) {\nmargin: 0;\n\n}\n`\n\n\n\nexport const TitleCard = styled.h2`\nfont-weight: 500;\nfont-size: 20px;\nline-height: 27px;\nmargin-bottom: 18px;\n@media screen and (min-width: 767px) {\n  margin-bottom: 24px;\n  font-weight: 500;\nfont-size: 28px;\nline-height: 38px;\n}\n\n\n`\n\n\n\nexport const FormContainer = styled(Form)`\n  position: relative;\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 25px;\n\n  background-color: var(--cl-almost-white);\n\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  /* margin: 0 auto; */\n  /* margin: 0 auto; */\n margin-bottom: 40px;\n\n  // display: flex;\n  // gap: 12px;\n  // align-items: center;\n  // justify-content: space-between;\n\n  //   font-weight: 500;\n  //   font-family: 'Manrope';\n  // font-size: 16px;\n  // border: none;\n  // background-color: transparent;\n\n    @media screen and (min-width: 767px) {\n      width: 704px;\n      height: 268px;\n      padding: 20px 20px;\n      display: flex;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      gap: 71px;\n      \n\n    }\n\n    @media screen and (min-width: 991px) {\n      width: 395px;\n      height: 520px;\n      padding: 20px 24px 16px;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      gap: 25px;\n      margin-right: 32px;\n    }\n`;\n\nexport const ImgContainer = styled.div`\n  width: 182px;\n  height: 182px;\n  margin-bottom: 14px;\n\n  border-radius: 40px;\n`;\nexport const ImgAvatar = styled.img`\n  border-radius: 40px;\n`;\nexport const SVG = styled.svg`\n  margin-right: 8px;\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const InputAvatar = styled(Field)`\n  width: 96px;\n  visibility: hidden;\n`;\nexport const BtnPhoto = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 96px;\n  height: 28px;\n  border: none;\n  background-color: transparent;\n`;\n\n\nexport const BtnText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 22px;\n`;\n\nexport const BtnCheck = styled.button`\n  position: absolute;\n  right: 15px;\n  // top: 50px;\n  // width: 24px;\n  // height: 24px;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 0px;\n    left: 0px;\n  }\n  @media screen and (min-width: 991px) {\n    position: absolute;\n  \n   left: 315px;\n  }\n\n  \n\n\n`;\n\n// export const InputList = styled.div`\n// &: first-child{\n//   margin-top: 21px;\n// }\n\n// &: last-child{\n//   margin-bottom: 21px;\n// `\n\n// export const Input = styled(Field)`\n//   width: 130px;\n//   border: none;\n//   background-color: transparent;\n// `;\nexport const InputContainer = styled(Field)`\n  padding: 6px 12px;\n  width: 190px;\n  height: 28px;\n\n  background-color: var(--cl-almost-white);\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 12px;\n  &: focus {\n    outline: none;\n  }\n  \n  @media screen and (min-width: 767px) {\n    padding: 6px 12px;\n    width: 255px;\n    height: 32px;\n  }\n\n\n\n`;\n\nexport const Label = styled.label`\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n\n\n  @media screen and (min-width: 991px) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n`;\n\nexport const DIV = styled.div`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n  margin: 12px auto;\n\n  @media screen and (min-width: 767px) {\n    margin: 8px auto;\n    width: 355px;\n    height: 32px;\n  }\n  \n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  right: 85px;\n\n  bottom: 220px;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n  color: #da1414;\n`;\n\n\nexport const SVGBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-green);\n  fill: transparent;\n`;\n\nexport const BtnEdit = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: var(--cl-blue-link);\n`;\n\nexport const ImgCon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Photosvg = styled.svg`\n  width: 182px;\n  height: 182px;\n\n  // stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'Redux/auth/selector';\nimport { updateUser } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { LogoutBtn } from 'components/Logout/Logout';\nimport { PetsData } from 'components/PetsData/PetsData';\n\nimport {\n  MainContainer,\n  Box,\n  TitleCard,\n  FormContainer,\n  BtnCheck,\n  InputContainer,\n  Label,\n  InputAvatar,\n  BtnText,\n  BtnPhoto,\n  ImgContainer,\n  SVG,\n  SVGBtn,\n  DIV,\n  ImgCon,\n  Photosvg,\n  ImgAvatar,\n  BtnEdit,\n} from './UserData.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().max(16, 'Length must be less then 15').required(),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .email('Invalid e-mail')\n    .required(),\n  birthday: yup.date().nullable(),\n  phone: yup\n    .string()\n    .matches(/^\\+380\\d{9}$/, 'Enter your phone number in format +380')\n    .nullable(),\n  city: yup.string().max(16, 'Length must be less then 16').nullable(),\n});\n\n\nconst Camera = () => {\n  return (\n    <BtnPhoto>\n      <SVG>\n        <use href={icons + '#camera'} />\n      </SVG>\n      <BtnText>Edit photo</BtnText>\n    </BtnPhoto>\n  );\n};\n\nconst CheckBlue = () => {\n  return (\n    <BtnPhoto>\n      <SVG>\n        <use href={icons + '#check'} />\n      </SVG>\n      <BtnText>Confirm</BtnText>\n    </BtnPhoto>\n  );\n};\n\nexport const UserData = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n  const [toggleIconPass, setToggleIconPass] = useState(Camera);\n\n  const [imgUrl, setImgUrl] = useState('');\n\n  const [userName, setUserName] = useState(user.name);\n  const [userEmail, setUserEmail] = useState(user.email);\n  const [userBirthday, setUserBirthday] = useState(user.birthday);\n  const [userPhone, setUserPhone] = useState(user.phone);\n  const [userCity, setUserCity] = useState(user.city);\n\n  const [isEditingName, setIsEditingName] = useState(false);\n  const [isEditingEmail, setIsEditingEmail] = useState(false);\n  const [isEditingBirthday, setIsEditingBirthday] = useState(false);\n  const [isEditingPhone, setIsEditingPhone] = useState(false);\n  const [isEditingCity, setIsEditingCity] = useState(false);\n\n  // const [isUpdateForm, setIsUpdateForm] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    city: '',\n    birthday: '',\n    avatarURL: '',\n  });\n\n  useEffect(() => {\n    const storedFormData = localStorage.getItem('formData');\n    if (storedFormData) {\n      setFormData(JSON.parse(storedFormData));\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (isUpdateForm) {\n  //     dispatch(currentUser());\n  //     setIsUpdateForm(null);\n  //   }\n  // }, [dispatch, isUpdateForm]);\n\n  useEffect(() => {\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }, [formData]);\n\n  const handleSubmitInput = async () => {\n\n    const formData = new FormData();\n    formData.append('name', userName);\n    formData.append('email', userEmail);\n    if (userPhone) {\n      formData.append('phone', userPhone);\n    }\n    if (userCity) {\n      formData.append('city', userCity);\n    }\n    if (userBirthday) {\n      formData.append('birthday', userBirthday);\n    }\n\n    if (imgUrl) {\n      formData.append('avatarURL', imgUrl);\n    }\n    await dispatch(updateUser(formData));\n  };\n\n\n  const handleDatePickerClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <MainContainer>\n    <Box>\n      <TitleCard>My information:</TitleCard>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n          name: formData.name || user?.name || '',\n          email: formData.name || user?.email || '',\n          phone: formData.phone || user?.phone || '',\n          city: formData.phone || user?.city || '',\n        }}\n\n        validationSchema={schema}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          errors,\n          touched,\n        }) => (\n          <FormContainer autoComplete=\"off\" onSubmit={handleSubmitInput}>\n            <ImgCon>\n              <ImgContainer>\n                {imgUrl ? (\n                  <ImgAvatar\n                    src={URL.createObjectURL(imgUrl)}\n                    alt=\"Photo user\"\n                  />\n                ) : (\n                  <Photosvg>\n                    <use href={icons + '#photodefault'} />\n                  </Photosvg>\n                )}\n              </ImgContainer>\n\n              <label\n                htmlFor=\"imgUrl\"\n                onClick={() => setToggleIconPass(CheckBlue)}\n                onSubmit={handleSubmitInput}\n              >\n                {toggleIconPass}\n                <InputAvatar\n                  id=\"imgUrl\"\n                  type=\"file\"\n                  name=\"imgUrl\"\n                  onChange={e => setImgUrl(e.target.files[0])}\n                  accept=\"image/*,.png,.jpg,.gif,.web\"\n                />\n              </label>\n            </ImgCon>\n            <div>\n              <DIV>\n                <Label>Name: </Label>\n                {isEditingName ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"name\"\n                    value={userName}\n                    onChange={e => setUserName(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"text\" name=\"name\" value={userName} />\n                )}\n                {isEditingName ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingName(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingName(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>Email: </Label>\n                {isEditingEmail ? (\n                  <InputContainer\n                    type=\"email\"\n                    name=\"email\"\n                    value={userEmail}\n                    onChange={e => setUserEmail(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"email\" name=\"email\" value={userEmail} />\n                )}\n                {isEditingEmail ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingEmail(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingEmail(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>Birthday: </Label>\n                {isEditingBirthday ? (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    value={userBirthday}\n                    onChange={e => {\n                      setUserBirthday(e.target.value);\n                      handleDatePickerClose();\n                    }}\n                    dateFormat=\"dd/MM/yyyy\"\n                    open={isOpen}\n                    onClickOutside={() => setIsOpen(false)}\n                    onFocus={() => setIsOpen(true)}\n                    showYearDropdown\n                    scrollableYearDropdown\n                  />\n                ) : (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    value={userBirthday}\n                  />\n                )}\n                {isEditingBirthday ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingBirthday(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingBirthday(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n              <DIV>\n                <Label>Phone: </Label>\n                {isEditingPhone ? (\n                  <InputContainer\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={userPhone}\n                    onChange={e => setUserPhone(e.target.value)}\n                    placeholder=\"+380\"\n                  />\n                ) : (\n                  <InputContainer type=\"tel\" name=\"phone\" value={userPhone} />\n                )}\n                {isEditingPhone ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingPhone(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingPhone(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>City: </Label>\n                {isEditingCity ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"city\"\n                    value={userCity}\n                    onChange={e => setUserCity(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"text\" name=\"city\" value={userCity} />\n                )}\n                {isEditingCity ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingCity(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingCity(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <LogoutBtn />\n            </div>\n          </FormContainer>\n        )}\n        </Formik>\n      </Box>\n      <PetsData/>\n    </MainContainer>\n  );\n};\n","\nimport { UserData } from \"components/UserData/UserData\";\n\nconst User = () => {\n  return (\n    <>\n      <UserData/>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["Overlay","styled","Modal","props","report","Content","Button","CloseIcon","ModalApproveAction","children","onClose","useEffect","onEscapeClose","event","code","window","addEventListener","document","body","style","overflow","removeEventListener","onClick","target","currentTarget","type","href","icons","ModalContent","TitleModal","ButtonWrap","ButtonYes","Arrow","ArrowBack","BtnLogout","LogoutBtn","useState","isOpenModal","setIsOpenModal","dispatch","useDispatch","toggleModal","isOpen","console","log","logOut","selectPets","state","pets","Card","Photo","Description","Label","Breed","LastLabel","Text","LastText","Btn","Icon","ModalContainer","ModalTitle","ModalText","ModalItem","ModalButton","ModalIcon","PetsItem","item","name","deletePet","id","src","avatarURL","alt","width","height","birthday","breed","comments","List","PetsList","useSelector","fetchPets","map","contact","Container","Title","AddButton","AddIcon","PetsData","currentPage","setCurrentPage","showPreviousPage","setShowPreviousPage","to","MainContainer","Box","TitleCard","FormContainer","Form","ImgContainer","ImgAvatar","SVG","InputAvatar","Field","BtnPhoto","BtnText","BtnCheck","InputContainer","DIV","SVGBtn","ErrorMessage","BtnEdit","ImgCon","Photosvg","schema","yup","shape","max","required","email","matches","nullable","phone","city","Camera","CheckBlue","UserData","user","selectUser","toggleIconPass","setToggleIconPass","imgUrl","setImgUrl","userName","setUserName","userEmail","setUserEmail","userBirthday","setUserBirthday","userPhone","setUserPhone","userCity","setUserCity","isEditingName","setIsEditingName","isEditingEmail","setIsEditingEmail","isEditingBirthday","setIsEditingBirthday","isEditingPhone","setIsEditingPhone","isEditingCity","setIsEditingCity","setIsOpen","formData","setFormData","storedFormData","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmitInput","FormData","append","updateUser","enableReinitialize","initialValues","validationSchema","values","handleSubmit","handleChange","handleBlur","errors","touched","autoComplete","onSubmit","URL","createObjectURL","htmlFor","onChange","e","files","accept","value","dateFormat","open","onClickOutside","onFocus","showYearDropdown","scrollableYearDropdown","placeholder"],"sourceRoot":""}