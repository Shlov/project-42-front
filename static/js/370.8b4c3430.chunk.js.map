{"version":3,"file":"static/js/370.8b4c3430.chunk.js","mappings":"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","sources":["Redux/pets/selectors.js","components/AddPetButton/AddPetButton.styled.jsx","components/AddPetButton/AddPetButton.js","components/ModalApproveAction/ModalApproveAction.styled.jsx","components/ModalApproveAction/ModalApproveAction.js","components/ModalCongrats/ModalCongrats.styled.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.js","components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.js","components/PetsData/PetsData.styled.js","components/PetsData/PetsData.js","components/ModalCongrats/ModalCongrats.js","components/UserData/UserData.styled.jsx","components/UserData/UserData.js","pages/User.js"],"sourcesContent":["\nexport const selectPets = state => state.pets.pets;\n\nexport const getAddPetSuccessfulConnection = state =>\n  state.pets.isResponseSuccessful;\n\nexport const getIsLoading = state => state.pets.isLoading;\n","import styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-background);\n  fill: transparent;\n  ${(props) => props.mobile ? `\n    width: inherit;\n    position: relative;\n    right: 2.5px;\n  ` : ''}\n`;\n\nexport const Button = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  margin-left: 12px;\n  width: 129px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-background);\n  background-color: var(--cl-blue-link);\n\n  transition: background-color var(--animat), border-color var(--animat);\n  ${(props) => props.mobile ? `\n    display: block;\n    position: fixed;\n    bottom: 20px;\n    border-radius: 50px;\n    width: 80px;\n    margin: 0 !important;\n    z-index: 10;\n    height: 80px;\n    right: 20px;\n    gap: 0;\n  ` : ''}\n  &:hover,\n  &:focus {\n    color: var(--cl-blue-link);\n    background-color: ${(props) => props.theme === 'day' ? 'var(--cl-almost-white)' : 'transparent'};\n\n    svg {\n      stroke: var(--cl-blue-link);\n    }\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  ${Button}\n  ${(props) => props.mobile ? `\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  ` : ''}\n`;\n\nexport const AddButton = styled.button`\n  ${Button}\n`;\n\nexport const NavLinkWrapper = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n","import {\n  Link,\n  AddButton,\n  AddIcon,\n  NavLinkWrapper,\n} from './AddPetButton.styled.jsx';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport icons from 'images/icons.svg';\nimport { getConnect } from 'Redux/auth/selector.js';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\n\nimport {\n  DescrModal,\n  ModalContent,\n} from './../ModalCongrats/ModalCongrats.styled';\n\nimport {\n  ButtonLogin,\n  ButtonRegister,\n  PawCss,\n} from 'components/AuthNav/AuthNav.styled.jsx';\n\nconst AddPetButton = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(getConnect);\n  const mobile = useSelector((state) => state.main.mobile)\n  const theme = useSelector((state) => state.main.theme)\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleUnauthorizedClick = () => {\n    setIsOpenModal(true);\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <Link to={`/add-pet`} state={{ from: location }} mobile={mobile} theme={theme}>\n          {!mobile && 'Add Pet'}\n          <AddIcon mobile={mobile}>\n            <use href={icons + '#plus-small'} />\n          </AddIcon>\n          {mobile && 'Add Pet'}\n        </Link>\n      ) : (\n        <>\n          <AddButton type=\"button\" onClick={handleUnauthorizedClick} mobile={mobile} theme={theme}>\n            {!mobile && 'Add Pet'}\n            <AddIcon mobile={mobile}>\n              <use href={icons + '#plus-small'} />\n            </AddIcon>\n            {mobile && 'Add Pet'}\n          </AddButton>\n          {isOpenModal && (\n            <ModalApproveAction onClose={toggleModal}>\n              <ModalContent>\n                <DescrModal>\n                  Please log in or register to use this functionality.\n                </DescrModal>\n\n                <NavLinkWrapper>\n                  <NavLink to=\"/login\">\n                    <ButtonLogin>\n                      Log IN\n                      <PawCss width={21} height={24}>\n                        <use href={icons + '#pawprint'} />\n                      </PawCss>\n                    </ButtonLogin>\n                  </NavLink>\n                  <NavLink to=\"/register\">\n                    <ButtonRegister>Registration</ButtonRegister>\n                  </NavLink>\n                </NavLinkWrapper>\n              </ModalContent>\n            </ModalApproveAction>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AddPetButton;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(43, 43, 43, 0.6);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: 280px;\n  max-height: 590px; //найменша висота телефону\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  background-color: ${(props) => props.theme === 'day' ? 'var(--cl-almost-white)' : '#111'};\n  box-shadow: var(--shadow-default);\n  border-radius: 20px;\n\n  @media (min-width: 768px) {\n    width: ${props => props.width ? \"681px\" : \"608px\"};\n    border-radius: 40px;\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n`\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  padding: 0;\n\n  background-color: ${(props) => props.theme === 'day' ? 'var(--cl-almost-white)' : '#111'};\n  color: var(--cl-blue-link);\n  border: none;\n\n  cursor: pointer;\n\n  transition: transform var(--animat);\n\n  @media (min-width: 768px) {\n    top: 29px;\n    right: 29px;\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    transform: scale(1.2);\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n`;\n","// Перевикористовуємий компонент, що рендерить у модальному вікні питання, отримане у вигляді childrens,\n// та 2 функціональні кнопки. Модальне вікно повинно закриватись по кліку на кнопку Cancel,\n// по кліку на кнопку закриття, клік по бекдропу, а також клік по Escape.\n// По кліку на Yes необхідно викликати функцію, передану в ModalApproveAction у вигляді props на випадок згоди користувача\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, CloseIcon, Content, Modal, Overlay } from './ModalApproveAction.styled';\nimport icons from 'images/icons.svg';\n\nexport const ModalApproveAction = ({ children, onClose, width}) => {\n  const theme = useSelector(state => state.main.theme)\n  //   пропс onClose це функція toggleModal,\n  //   яку потрібно передати компоненту ModalApproveAction\n  //   toggleModal - змінює стейт isOpen\n\n  const onBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n    document.body.style.overflow= \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"visible\";\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [onClose]);\n\n  return (\n    <>\n      <Overlay onClick={onBackdropClose}>\n        <Modal width={width ? width=\"true\" : undefined } theme={theme}>\n          <Button type=\"button\" apia-label=\"close\" onClick={onClose} theme={theme}>\n            <CloseIcon>\n              <use href={icons + '#cross-small'} />\n            </CloseIcon>\n          </Button>\n          <Content>{children}</Content>\n        </Modal>\n      </Overlay>\n    </>\n  );\n};\n\nModalApproveAction.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  width: PropTypes.any\n};\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  padding: 68px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 60px 0 60px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 33px;\n\n  padding: 0;\n  margin-top: 0px;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 36px;\n    line-height: 49px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const DescrModal = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 22px;\n  text-align: center;\n\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 33px;\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  padding: 0;\n  width: 248px;\n  height: 40px;\n\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n\n  border: 2px solid var(--animat);\n  border-radius: 40px;\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n  }\n`;\n\nexport const PawPrint = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 77px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 108px 0 108px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-size: 24px;\n  line-height: 33px;\n  font-weight: 500;\n\n  padding-bottom: 48px;\n  color: ${(props) => props.theme === 'day' ? '#111' : '#fff'};\n\n  @media (min-width: 768px) {\n    font-weight: 700;\n    font-size: 36px;\n    line-height: 49px;\n    padding-bottom: 48px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 17px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  width: 256px;\n  height: 40px;\n  padding: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background: transparent;\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 129px;\n  }\n\n  transition: background var(--animat), background-color var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: var(--cl-background);\n    background: var(--gr-blue);\n    border: var(--gr-blue);\n  }\n`;\n\nexport const ButtonYes = styled(Button)`\n  border: 2px solid var(--animat);\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  transition: none;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n  }\n`;\n\nexport const Arrow = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\nexport const ArrowBack = styled.svg`\nwidth: 24px;\nheight: 24px;\nstroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const BtnLogout = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n\n  width: 98px;\n  height: 30px;\n\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: ${(props) => props.theme === 'day' ? '#111' : '#fff'};\n\n  &:hover,\n  &:focus {\n    color: var(--cl-blue-link);\n    border: 1px solid var(--cl-blue-link);\n    border-radius: 40px;\n\n\n  }\n`;\n","// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Arrow,\n  Button,\n  ButtonWrap,\n  ModalContent,\n  TitleModal,\n  BtnLogout,\n  ArrowBack,\n\n  //Олексій\n  ButtonYes,\n} from './Logout.styled';\n\n//Олексій\n// } from './UserPage.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { Navigate } from 'react-router-dom';\nimport { getConnect } from 'Redux/auth/selector';\n\nexport const LogoutBtn = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const theme = useSelector(state => state.main.theme)\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    // console.log('Передаємо екшн');\n    dispatch(logOut());\n};\nconst isConnect = useSelector(getConnect);\nif (!isConnect) {\n  return (< Navigate to = \"/\" replace />)\n}\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal} >\n          <ModalContent>\n            <TitleModal theme={theme}>Already leaving?</TitleModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <ButtonYes type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Arrow>\n                  <use href={icons + '#logout'} />\n                </Arrow>\n              </ButtonYes>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalApproveAction>\n      )}\n\n      <BtnLogout type=\"button\" onClick={toggleModal} theme={theme}>\n        <ArrowBack><use href={icons + '#logout'}/></ArrowBack>\n        LogOut\n      </BtnLogout>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  padding: 16px 20px 40px 20px;\n  width: 280px;\n  background-color: var(--cl-almost-white);\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    width: 703px;\n    padding: 20px;\n    border-radius: 40px;\n  }\n  @media (min-width: 1280px) {\n    display: flex;\n    width: 821px;\n  }\n`;\nexport const Photo = styled.img`\n  background-color: gray;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 128px;\n    height: 128px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 161px;\n    height: 161px;\n    margin-right: 32px;\n    border-radius: 40px;\n  }\n`;\n\nexport const Description = styled.div`\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 515px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 580px;\n  }\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 12px;\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\nexport const Breed = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport const LastLabel = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\n\nexport const Text = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\nexport const LastText = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 272px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-color: var(--cl-almost-white);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 0;\n  right: 0;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n\n  @media screen and (min-width: 768px) {\n    top: 0;\n    right: 0;\n  }\n`;\n\nexport const ModalContainer = styled.div`\n  padding: 60px 5px 60px 5px;\n  color: var(--cl-black);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  letter-spacing: -0.01em;\n`;\nexport const ModalTitle = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  text-align: center;\n  line-height: 1.36;\n  padding: 0;\n  margin: 0px;\n  margin-bottom: 40px;\n`;\n\nexport const ModalText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  margin-bottom: 48px;\n`;\nexport const ModalItem = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n`;\n\nexport const ModalButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 120px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n  @media screen and (min-width: 768px) {\n    width: 129px;\n  }\n`;\n\nexport const ModalIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { deletePet } from 'Redux/pets/operations';\nimport icons from 'images/icons.svg';\nimport {\n  Card,\n  Photo,\n  Label,\n  LastLabel,\n  Text,\n  Icon,\n  Btn,\n  Breed,\n  Description,\n  LastText,\n  ModalContainer,\n  ModalTitle,\n  ModalText,\n  ModalItem,\n  ModalButton,\n  Button,\n  ModalIcon,\n} from './PetsItem.styled';\n\nexport const PetsItem = ({\n  item: { _id, name, imageURL, birthday, breed, comments },\n}) => {\n  const dispatch = useDispatch();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleDeletePet = () => {\n    dispatch(deletePet(_id));\n    setIsOpenModal(false);\n  };\n\n  return (\n    <Card>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal}>\n          <ModalContainer>\n            <ModalTitle>Delete your pet?</ModalTitle>\n            <ModalText>\n              Are you sure want to delete a <ModalItem>“{name}?”</ModalItem>\n              <br />\n              You can`t undo this action.\n            </ModalText>\n            <ModalButton>\n              <Button type=\"button\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <Button type=\"button\" onClick={handleDeletePet}>\n                Yes\n                <ModalIcon>\n                  <use href={icons + '#trash'} />\n                </ModalIcon>\n              </Button>\n            </ModalButton>\n          </ModalContainer>\n        </ModalApproveAction>\n      )}\n      <div>\n        <Photo src={imageURL} alt={name} width=\"240\" height=\"240\" />\n        <Btn type=\"button\" onClick={toggleModal}>\n          <Icon>\n            <use href={icons + '#trash'} />\n          </Icon>\n        </Btn>\n      </div>\n\n      <Description>\n        <Label>\n          Name: <Text>{name}</Text>\n        </Label>\n        <Label>\n          Date of birth: <Text>{birthday}</Text>\n        </Label>\n        <Breed>\n          Breed: <Text>{breed}</Text>\n        </Breed>\n        <LastLabel>\n          Comments: &nbsp;<LastText>{comments}</LastText>\n        </LastLabel>\n      </Description>\n    </Card>\n  );\n};\n\nPetsItem.propTypes = {\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    breed: PropTypes.string.isRequired,\n    comments: PropTypes.string.isRequired,\n    imageURL: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\ngap: 20px;\n`","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPets } from 'Redux/pets/selectors';\nimport { PetsItem } from 'components/PetsItem/PetsItem';\nimport { List } from './PetsList.styled';\nimport { fetchPets } from 'Redux/pets/operations';\n\nexport const PetsList = () => {\n  const pets = useSelector(selectPets);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n \n\n  return (\n    <List>\n      {pets.map((pet) => (\n        <li key={pet._id}>\n          <PetsItem item={pet} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 280px;\n  margin: auto;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    width: 703px;\n    margin-bottom: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 20px;\n    width: 821px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { PetsList } from 'components/PetsList/PetsList';\nimport { Container, Title } from './PetsData.styled';\nimport { useState } from 'react';\nimport AddPetButton from 'components/AddPetButton/AddPetButton';\n\nexport const PetsData = () => {\n  const [showPreviousPage, setShowPreviousPage] = useState(true);\n\n  const handleChangePage = () => {\n    setShowPreviousPage(false);\n  };\n\n  return (\n    <>\n      {showPreviousPage && (\n        <div>\n          <Container>\n            <Title>My Pets:</Title>\n\n            <AddPetButton onClick={handleChangePage}>\n              <Link to=\"/add-pet\">add</Link>\n            </AddPetButton>\n          </Container>\n          <PetsList />\n        </div>\n      )}\n    </>\n  );\n};\n","import { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\n\nimport icons from 'images/icons.svg';\nimport {\n  PawPrint,\n  DescrModal,\n  ModalContent,\n  TitleModal,\n  Button,\n} from './ModalCongrats.styled';\n\n\nexport const ModalCongrats = () => {\n    // toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n      {!isOpenModal &&\n        <ModalApproveAction onClose={toggleModal}> \n          <ModalContent>\n            <TitleModal>Congrats!</TitleModal>\n            <DescrModal>Your registration is successful</DescrModal>\n\n            <Button\n              type=\"button\"\n              aria-label=\"go to profile\"\n              onClick={toggleModal}\n            >\n              Go to profile\n              <PawPrint>\n                <use href={icons + '#pawprint'} />\n              </PawPrint>\n            </Button>\n          </ModalContent>\n        </ModalApproveAction>\n      }\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const MainContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media screen and (min-width: 767px) {\n    padding: 32px;\n    width: 768px;\n  }\n  @media screen and (min-width: 991px) {\n    flex-direction: row;\n    padding: 30px, 16px, 30px, 16px;\n    width: 1280px;\n  }\n`;\nexport const Box = styled.div`\n  margin: 0 auto;\n\n  @media screen and (min-width: 767px) {\n    margin: 0;\n  }\n`;\n\nexport const TitleCard = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  margin-bottom: 18px;\n  @media screen and (min-width: 767px) {\n    margin-bottom: 24px;\n    font-weight: 500;\n    font-size: 28px;\n    line-height: 38px;\n  }\n`;\n\nexport const FormContainer = styled(Form)`\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 25px;\n\n  background-color: ${props =>\n    props.theme === 'day' ? 'var(--cl-almost-white)' : '#111'};\n\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  /* margin: 0 auto; */\n  /* margin: 0 auto; */\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 767px) {\n    width: 704px;\n    height: 268px;\n    padding: 20px 20px;\n    display: flex;\n    gap: 71px;\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n  }\n\n  @media screen and (min-width: 991px) {\n    width: 395px;\n    height: 520px;\n    padding: 20px 24px 16px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 25px;\n    margin-right: 32px;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 21px;\n\n  @media screen and (min-width: 767px) {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\n  display: flex;\n\n  align-items: center;\n  justify-content: center;\n\n  width: 182px;\n  height: 182px;\n  margin-bottom: 14px;\n  border-radius: 40px;\n`;\nexport const ImgAvatar = styled.img`\n  height: 100%;\n  border-radius: 40px;\n`;\nexport const SvgIcon = styled.svg`\n  margin-right: 4px;\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\nexport const InputAvatar = styled(Field)`\n  width: 150px;\n  visibility: hidden;\n`;\nexport const BtnPhoto = styled.button`\n  position: absolute;\n  left: 86px;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 28px;\n  border: none;\n  background-color: transparent;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 22px;\n\n  @media screen and (min-width: 767px) {\n    left: 45px;\n  }\n\n  @media screen and (min-width: 991px) {\n    left: 120px;\n  }\n`;\n\nexport const LabelContainer = styled.label`\n  position: relative;\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 12px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n\n  @media screen and (min-width: 767px) {\n    // margin: 8px auto;\n    margin-bottom: 8px;\n    width: 355px;\n    height: 32px;\n  }\n  @media screen and (min-width: 991px) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n`;\n\nexport const InputContainer = styled(Field)`\n  padding: 6px 12px;\n  width: 190px;\n  height: 28px;\n\n  background-color: var(--cl-almost-white);\n  border: solid\n    ${props => {\n      if (props.value) {\n        return '1px var(--cl-blue-link)';\n      } else if (!props.value && props.error) {\n        return '2px var(--cl-red)';\n      } else {\n        return 'var(--cl-blue-link)';\n      }\n    }};\n\n  border-radius: 20px;\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 12px;\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n  }\n\n  @media screen and (min-width: 767px) {\n    padding: 6px 12px;\n    width: 255px;\n    height: 32px;\n    cursor: pointer;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const BtnCheck = styled.button`\n  position: absolute;\n  right: 15px;\n  padding: 0px 0px;\n  cursor: pointer;\n  border: none;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n`;\nexport const SvgBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-green);\n  fill: transparent;\n`;\n\nexport const BtnEdit = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  stroke: var(--cl-blue-link);\n  fill: var(--cl-blue-link);\n`;\n\nexport const Photosvg = styled.svg`\n  width: 182px;\n  height: 182px;\n  fill: transparent;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  position: absolute;\n  top: 25px;\n  right: 20px;\n  font-weight: 400;\n  font-size: 9px;\n  line-height: 14px;\n  color: var(--cl-red);\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    top: 29px;\n    right: 20px;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectorNewUser, selectUser } from 'Redux/auth/selector';\nimport { updateUser } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { LogoutBtn } from 'components/Logout/Logout';\nimport { PetsData } from 'components/PetsData/PetsData';\nimport { ModalCongrats } from 'components/ModalCongrats/ModalCongrats';\n\nimport {\n  MainContainer,\n  Box,\n  TitleCard,\n  FormContainer,\n  BtnCheck,\n  InputContainer,\n  InputAvatar,\n  StyledErrorMessage,\n  AvatarContainer,\n  BtnPhoto,\n  ImgContainer,\n  SvgIcon,\n  SvgBtn,\n  LabelContainer,\n  Photosvg,\n  ImgAvatar,\n  BtnEdit,\n} from './UserData.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).max(16, 'length must be less then 15').required(),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'please enter a valid email')\n    .email('invalid e-mail')\n    .required(),\n  birthday: yup.date('please enter a valid date 00.00.0000').nullable(),\n  phone: yup\n    .string()\n    .matches(/^\\+380\\d{9}$/, 'enter phone number in format +380')\n    .required(),\n  city: yup.string().min(3).max(16, 'length must be less then 16').nullable(),\n});\n\nexport const UserData = () => {\n  const newUser = useSelector(selectorNewUser);\n  const theme = useSelector(state => state.main.theme);\n\n  const [isNewUser, setIsNewUser] = useState(newUser);\n\n  const inputRef = useRef();\n\n  const handleCongratsOut = () => {\n    setIsNewUser(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n\n  const avatarURL = user.avatarURL;\n  const name = user.name;\n  const email = user.email;\n  const phone = user.phone;\n  const birthday = user.birthday;\n  const city = user.city;\n\n  const [userImage, setUserImage] = useState(avatarURL);\n  const [avatar, setAvatar] = useState(avatarURL);\n\n  const [isEditingAvatar, setIsEditingAvatar] = useState(false);\n  const [isEditingName, setIsEditingName] = useState(true);\n  const [isEditingEmail, setIsEditingEmail] = useState(true);\n  const [isEditingBirthday, setIsEditingBirthday] = useState(true);\n  const [isEditingPhone, setIsEditingPhone] = useState(true);\n  const [isEditingCity, setIsEditingCity] = useState(true);\n\n  const handleChangeAvatar = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const objURL = URL.createObjectURL(file);\n      setAvatar(objURL);\n      setUserImage(file);\n      setIsEditingAvatar(true);\n    }\n  };\n  const formData = new FormData();\n\n  const handleSubmitInput = (values, props) => {\n    if (userImage) {\n      formData.append('avatarURL', userImage);\n    }\n    if (values.name) {\n      formData.append('name', values.name);\n    }\n    if (values.email) {\n      formData.append('email', values.email);\n    }\n\n    if (values.phone) {\n      formData.append('phone', values.phone);\n    }\n    if (values.city) {\n      formData.append('city', values.city);\n    }\n    if (values.birthday) {\n      formData.append('birthday', values.birthday);\n    }\n    dispatch(updateUser(formData));\n  };\n\n  return (\n    <MainContainer>\n      {isNewUser && (\n        <div onClick={handleCongratsOut}>\n          <ModalCongrats />\n        </div>\n      )}\n      <Box>\n        <TitleCard>My information:</TitleCard>\n        <Formik\n          enableReinitialize={true}\n          initialValues={{\n            avatarURL: avatarURL,\n            name: name,\n            email: email,\n            phone: phone,\n            birthday: birthday,\n            city: city,\n          }}\n          validationSchema={schema}\n          onSubmit={handleSubmitInput}\n        >\n          {props => (\n            <FormContainer autoComplete=\"off\" theme={theme}>\n              <AvatarContainer>\n                <ImgContainer>\n                  {!avatar ? (\n                    <Photosvg>\n                      <use href={icons + '#photodefault'} />\n                    </Photosvg>\n                  ) : (\n                    <ImgAvatar src={avatar} alt=\"Photo user\" />\n                  )}\n                </ImgContainer>\n                <label htmlFor=\"avatar\">\n                  <InputAvatar\n                    id=\"avatar\"\n                    type=\"file\"\n                    name=\"avatar\"\n                    onBlur={props.handleBlur}\n                    onChange={handleChangeAvatar}\n                    accept=\"image/*,.png,.jpg,.gif,.web\"\n                    innerRef={inputRef}\n                  />\n                  {!isEditingAvatar ? (\n                    <BtnPhoto\n                      type=\"submit\"\n                      onClick={() => {\n                        setIsEditingAvatar(true);\n                        inputRef.current.click();\n                      }}\n                    >\n                      <SvgIcon>\n                        <use href={icons + '#camera'} />\n                      </SvgIcon>\n                      Edit photo\n                    </BtnPhoto>\n                  ) : (\n                    <BtnPhoto\n                      type=\"button\"\n                      onClick={() => setIsEditingAvatar(false)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgIcon>\n                        <use href={icons + '#check'} />\n                      </SvgIcon>\n                      Confirm\n                    </BtnPhoto>\n                  )}\n                </label>\n              </AvatarContainer>\n\n              <div>\n                <LabelContainer htmlFor=\"name\">\n                  Name:\n                  <div>\n                    <InputContainer\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      value={props.values.name}\n                      error={props.errors}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      disabled={!isEditingName ? false : true}\n                    />\n                    {props.errors.name ? (\n                      <StyledErrorMessage>\n                        {props.errors.name}\n                      </StyledErrorMessage>\n                    ) : null}\n                  </div>\n                  {isEditingName ? (\n                    <BtnCheck\n                      type=\"submit\"\n                      onClick={() => setIsEditingName(false)}\n                    >\n                      <BtnEdit>\n                        <use href={icons + '#edit'} />\n                      </BtnEdit>\n                    </BtnCheck>\n                  ) : (\n                    <BtnCheck\n                      type=\"button\"\n                      onClick={() => setIsEditingName(true)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgBtn>\n                        <use href={icons + '#check'} />\n                      </SvgBtn>\n                    </BtnCheck>\n                  )}\n                </LabelContainer>\n\n                <LabelContainer htmlFor=\"email\">\n                  Email:\n                  <div>\n                    <InputContainer\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      value={props.values.email}\n                      error={props.errors}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      disabled={!isEditingEmail ? false : true}\n                    />\n                    {props.errors.email ? (\n                      <StyledErrorMessage>\n                        {props.errors.email}\n                      </StyledErrorMessage>\n                    ) : null}\n                  </div>\n                  {isEditingEmail ? (\n                    <BtnCheck\n                      type=\"submit\"\n                      onClick={() => setIsEditingEmail(false)}\n                    >\n                      <BtnEdit>\n                        <use href={icons + '#edit'} />\n                      </BtnEdit>\n                    </BtnCheck>\n                  ) : (\n                    <BtnCheck\n                      type=\"button\"\n                      onClick={() => setIsEditingEmail(true)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgBtn>\n                        <use href={icons + '#check'} />\n                      </SvgBtn>\n                    </BtnCheck>\n                  )}\n                </LabelContainer>\n\n                <LabelContainer htmlFor=\"birthday\">\n                  Birthday:\n                  <div>\n                    <InputContainer\n                      type=\"date\"\n                      name=\"birthday\"\n                      id=\"birthday\"\n                      value={props.values.birthday}\n                      error={props.errors}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      disabled={!isEditingBirthday ? false : true}\n                    />\n                    {props.errors.birthday ? (\n                      <StyledErrorMessage>\n                        {props.errors.birthday}\n                      </StyledErrorMessage>\n                    ) : null}\n                  </div>\n                  {isEditingBirthday ? (\n                    <BtnCheck\n                      type=\"submit\"\n                      onClick={() => setIsEditingBirthday(false)}\n                    >\n                      <BtnEdit>\n                        <use href={icons + '#edit'} />\n                      </BtnEdit>\n                    </BtnCheck>\n                  ) : (\n                    <BtnCheck\n                      type=\"button\"\n                      onClick={() => setIsEditingBirthday(true)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgBtn>\n                        <use href={icons + '#check'} />\n                      </SvgBtn>\n                    </BtnCheck>\n                  )}\n                </LabelContainer>\n\n                <LabelContainer htmlFor=\"phone\">\n                  Phone:\n                  <div>\n                    <InputContainer\n                      type=\"tel\"\n                      name=\"phone\"\n                      id=\"phone\"\n                      value={props.values.phone}\n                      error={props.errors}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      placeholder=\"+380000000000\"\n                      disabled={!isEditingPhone ? false : true}\n                    />\n                    {props.errors.phone ? (\n                      <StyledErrorMessage>\n                        {props.errors.phone}\n                      </StyledErrorMessage>\n                    ) : null}\n                  </div>\n                  {isEditingPhone ? (\n                    <BtnCheck\n                      type=\"submit\"\n                      onClick={() => setIsEditingPhone(false)}\n                    >\n                      <BtnEdit>\n                        <use href={icons + '#edit'} />\n                      </BtnEdit>\n                    </BtnCheck>\n                  ) : (\n                    <BtnCheck\n                      type=\"button\"\n                      onClick={() => setIsEditingPhone(true)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgBtn>\n                        <use href={icons + '#check'} />\n                      </SvgBtn>\n                    </BtnCheck>\n                  )}\n                </LabelContainer>\n\n                <LabelContainer htmlFor=\"city\">\n                  City:\n                  <div>\n                    <InputContainer\n                      type=\"text\"\n                      name=\"city\"\n                      id=\"city\"\n                      value={props.values.city}\n                      error={props.errors}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      placeholder=\"Lviv\"\n                      disabled={!isEditingCity ? false : true}\n                    />\n                    {props.errors.city ? (\n                      <StyledErrorMessage>\n                        {props.errors.city}\n                      </StyledErrorMessage>\n                    ) : null}\n                  </div>\n                  {isEditingCity ? (\n                    <BtnCheck\n                      type=\"submit\"\n                      onClick={() => setIsEditingCity(false)}\n                    >\n                      <BtnEdit>\n                        <use href={icons + '#edit'} />\n                      </BtnEdit>\n                    </BtnCheck>\n                  ) : (\n                    <BtnCheck\n                      type=\"button\"\n                      onClick={() => setIsEditingCity(true)}\n                      onSubmit={props.handleSubmit}\n                    >\n                      <SvgBtn>\n                        <use href={icons + '#check'} />\n                      </SvgBtn>\n                    </BtnCheck>\n                  )}\n                </LabelContainer>\n\n                <LogoutBtn />\n              </div>\n            </FormContainer>\n          )}\n        </Formik>\n      </Box>\n      <PetsData />\n    </MainContainer>\n  );\n};\n","\nimport { UserData } from \"components/UserData/UserData\";\n\nconst User = () => {\n  return (\n    <>\n      <UserData/>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["selectPets","state","pets","getAddPetSuccessfulConnection","isResponseSuccessful","getIsLoading","isLoading","AddIcon","styled","props","mobile","Button","css","theme","Link","NavLink","AddButton","NavLinkWrapper","location","useLocation","isLoggedIn","useSelector","getConnect","main","useState","isOpenModal","setIsOpenModal","to","from","href","icons","type","onClick","ModalApproveAction","onClose","isOpen","width","height","Overlay","Modal","Content","CloseIcon","children","useEffect","onEscapeClose","event","code","window","addEventListener","document","body","style","overflow","removeEventListener","target","currentTarget","undefined","ModalContent","TitleModal","DescrModal","PawPrint","ButtonWrap","ButtonYes","Arrow","ArrowBack","BtnLogout","LogoutBtn","dispatch","useDispatch","toggleModal","logOut","replace","Card","Photo","Description","Label","Breed","LastLabel","Text","LastText","Btn","Icon","ModalContainer","ModalTitle","ModalText","ModalItem","ModalButton","ModalIcon","PetsItem","item","_id","name","imageURL","birthday","breed","comments","deletePet","src","alt","List","PetsList","fetchPets","map","pet","Container","Title","PetsData","showPreviousPage","setShowPreviousPage","AddPetButton","ModalCongrats","MainContainer","Box","TitleCard","FormContainer","Form","AvatarContainer","ImgContainer","ImgAvatar","SvgIcon","InputAvatar","Field","BtnPhoto","LabelContainer","InputContainer","value","error","BtnCheck","SvgBtn","BtnEdit","Photosvg","StyledErrorMessage","schema","yup","shape","min","max","required","email","matches","nullable","phone","city","UserData","newUser","selectorNewUser","isNewUser","setIsNewUser","inputRef","useRef","user","selectUser","avatarURL","userImage","setUserImage","avatar","setAvatar","isEditingAvatar","setIsEditingAvatar","isEditingName","setIsEditingName","isEditingEmail","setIsEditingEmail","isEditingBirthday","setIsEditingBirthday","isEditingPhone","setIsEditingPhone","isEditingCity","setIsEditingCity","handleChangeAvatar","e","file","files","objURL","URL","createObjectURL","formData","FormData","enableReinitialize","initialValues","validationSchema","onSubmit","values","append","updateUser","autoComplete","htmlFor","id","onBlur","handleBlur","onChange","accept","innerRef","handleSubmit","current","click","errors","handleChange","disabled","placeholder"],"sourceRoot":""}