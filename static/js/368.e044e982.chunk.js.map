{"version":3,"file":"static/js/368.e044e982.chunk.js","mappings":"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","sources":["components/ModalApproveAction/ModalApproveAction.styled.jsx","components/ModalApproveAction/ModalApproveAction.js","components/UserPage/UserPage.styled.jsx","images/icons/logout.svg","components/ModalCongrats/ModalCongrats.styled.jsx","components/ModalCongrats/ModalCongrats.js","components/UserPage/UserPage.js","pages/User.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(43, 43, 43, 0.6);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: 608px;\n  height: 354px;\n  background-color: var(--cl-background);\n  box-shadow: var(--shadow-default);\n  border-radius: 40px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 29px;\n  right: 29px;\n\n  padding: 0;\n  background-color: var(--cl-background);\n  color: var(--cl-blue-link);\n\n  border: none;\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled.svg`\n width: 24px;\n  height: 24px;\n   stroke: var(--cl-blue-link);\n  \n  transition: transform var(--animat);\n  &:hover {\n    transform: scale(1.2);\n    \n  }\n`;\n","// Перевикористовуємий компонент, що рендерить у модальному вікні питання, отримане у вигляді childrens,\n// та 2 функціональні кнопки. Модальне вікно повинно закриватись по кліку на кнопку Cancel,\n// по кліку на кнопку закриття, клік по бекдропу, а також клік по Escape.\n// По кліку на Yes необхідно викликати функцію, передану в ModalApproveAction у вигляді props на випадок згоди користувача\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Button, CloseIcon, Modal, Overlay } from './ModalApproveAction.styled';\nimport icons from 'images/icons.svg';\n\nexport const ModalAprooveAction = ({ children, onClose }) => {\n  //   пропс onClose це функція toggleModal,\n  //   яку потрібно передати компоненту ModalAprooveAction\n  //   toggleModal - змінює стейт isOpen\n\n  const onBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [onClose]);\n\n  return (\n    <>\n      <Overlay onClick={onBackdropClose}>\n        <Modal>\n          <Button type=\"button\" apia-label=\"close\" onClick={onClose}>\n            <CloseIcon>\n              <use href={icons + '#cross-small'} />\n            </CloseIcon>\n          </Button>\n          <div>{children}</div>\n        </Modal>\n      </Overlay>\n    </>\n  );\n};\n\nModalAprooveAction.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 108px;\n  padding-bottom: 108px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n`;\n\nexport const TitleModal = styled.h4`\n  font-size: 36px;\n  line-height: 49px;\n  font-weight: 500;\n\n  padding: 0;\n  margin-top: 0px;\n  margin-bottom: 48px;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  padding: 0;\n  width: 129px;\n  height: 40px;\n  \n  letter-spacing: 0.04em;\n  font-weight: 700;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n    border-color: var(--cl-background);\n  }\n`;\n\nexport const Arrow = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n\nexport const BtnLogout = styled.button`\n  display: inline-flex;\n  gap: 12px;\n  align-items: center;\n  justify-content: space-between;\n  width: 98px;\n  height: 30px;\n  font-weight: 500;\n  font-family: 'Manrope';\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n`;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogout(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 4L18 4C19.1046 4 20 4.89543 20 6V18C20 19.1046 19.1046 20 18 20H14M3 12L15 12M3 12L7 8M3 12L7 16\",\n    stroke: \"#54ADFF\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogout);\nexport default __webpack_public_path__ + \"static/media/logout.8790af7bde245471313fc2a3bdb4b2da.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 60px;\n  padding-bottom: 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 49px;\n\n  padding: 0;\n  margin-top: 0px;\n  margin-bottom: 40px;\n`;\n\nexport const DescrModal = styled.p`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 33px;\n  text-align: center;\n\n  margin-bottom: 48px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  padding: 0;\n  width: 248px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n    border-color: var(--cl-background);\n  }\n`;\n\nexport const PawPrint = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: currentColor;\n`;\n","import { ModalAprooveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\n\nimport icons from 'images/icons.svg';\nimport {\n  PawPrint,\n  DescrModal,\n  ModalContent,\n  TitleModal,\n  Button,\n} from './ModalCongrats.styled';\n\nexport const ModalCongrats = () => {\n    // toggleModal, яку потрібно передати компоненту ModalAprooveActionб для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n//   const handleAction = () => {\n//     console.log('Передаємо екшн');\n//   };\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalAprooveAction onClose={toggleModal}>\n          <ModalContent>\n            <TitleModal>Congrats!</TitleModal>\n            <DescrModal>Youre registration is success</DescrModal>\n\n            <Button\n              type=\"button\"\n              aria-label=\"go to profile\"\n              onClick={toggleModal}\n            >\n              Go to profile\n              <PawPrint>\n                <use href={icons + '#pawprint'} />\n              </PawPrint>\n            </Button>\n          </ModalContent>\n        </ModalAprooveAction>\n      )}\n      <button\n        type=\"button\"\n        style={{ marginBottom: '200px', backgroundColor: '#CDDC39' }}\n        onClick={toggleModal}\n      >\n        Temporary Open ModalCongrats\n      </button>\n    </>\n  );\n};\n","// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\n\nimport { ModalAprooveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Arrow,\n  Button,\n  ButtonWrap,\n  ModalContent,\n  TitleModal,\n  BtnLogout,\n} from './UserPage.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'Redux/auth/operation';\n\nimport LogoutIcon from '../../images/icons/logout.svg';\nimport icons from 'images/icons.svg';\nimport { ModalCongrats } from 'components/ModalCongrats/ModalCongrats';\n\nexport const UserPage = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalAprooveActionб для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    console.log('Передаємо екшн');\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalAprooveAction onClose={toggleModal}>\n          <ModalContent>\n            <TitleModal>Already leaving?</TitleModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <Button type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Arrow>\n                  <use href={icons + '#logout'} />\n                </Arrow>\n              </Button>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalAprooveAction>\n      )}\n\n      <BtnLogout type=\"button\" onClick={toggleModal}>\n        <img src={LogoutIcon} alt=\"Button logout\" />\n        LogOut\n      </BtnLogout>\n\n      <ModalCongrats />\n    </>\n  );\n};\n","import { UserPage } from \"components/UserPage/UserPage\";\n\nconst User = () => {\n  return (\n    <>\n      <h2>User</h2>\n      <UserPage/>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["Overlay","styled","Modal","Button","CloseIcon","ModalAprooveAction","children","onClose","useEffect","onEscapeClose","event","code","window","addEventListener","removeEventListener","onClick","target","currentTarget","type","href","icons","ModalContent","TitleModal","ButtonWrap","Arrow","BtnLogout","DescrModal","PawPrint","ModalCongrats","useState","isOpenModal","setIsOpenModal","toggleModal","isOpen","style","marginBottom","backgroundColor","UserPage","dispatch","useDispatch","console","log","logOut","src","LogoutIcon","alt"],"sourceRoot":""}