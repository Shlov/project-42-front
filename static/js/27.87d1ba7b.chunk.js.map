{"version":3,"file":"static/js/27.87d1ba7b.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.js","components/CategoryStep/CategoryStep.styled.jsx","components/CategoryStep/CategoryStep.js","components/PersonalDetailsStep/PersonalDetailsStep.js","components/ImageInput/ImageInput.js","components/MoreInfoStep/MoreInfoStep.js","components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.js","pages/AddPet.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  color: var(--cl-blue-link);\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  height: 22px;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport icons from 'images/icons.svg';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <svg width={24} height={24}>\n        <use href={icons + '#arrow-left'} />\n      </svg>\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const CategoryStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n  margin-bottom: 91px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 137px;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const CategoryStepLabel = styled.label`\n  width: fit-content;\n  position: relative;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 40px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  letter-spacing: 0.04em;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-blue-light);\n\n  transition: background-color var(--animat), color var(--animat);\n\n  &:hover,\n  &:focus,\n  ${RadioButton}:checked + & {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n`;\n\nexport const AddPetFormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const AddPetFormNextButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  background-color: var(--cl-blue-link);\n  min-width: 248px;\n  padding: 9px 0;\n  border: none;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  color: var(--cl-background);\n  border-radius: 40px;\n\n  cursor: pointer;\n\n  &:disabled {\n    color: var(--cl-gray);\n    background-color: var(--cl-blue-light);\n    pointer-events: none;\n  }\n`;\n\nexport const PawIcon = styled.svg`\n  fill: var(--cl-background);\n`;\n","import { useRef, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BackLink from './../BackLink/BackLink';\nimport {\n  AddPetFormButtonWrapper,\n  AddPetFormNextButton,\n  CategoryStepContainer,\n  CategoryStepLabel,\n  PawIcon,\n  RadioButton,\n} from './CategoryStep.styled';\nimport icons from '../../images/icons.svg';\n\nconst CategoryStep = ({ onNext, onSelectCategory, selectedCategory }) => {\n  const location = useLocation();\n  const locRef = useRef(location.state?.from ?? '/main'); // for Back button\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    !selectedCategory ? setIsDisabled(true) : setIsDisabled(false);\n  }, [selectedCategory]);\n\n  const handleCategoryChange = event => {\n    const selectedCategory = event.target.value;\n    onSelectCategory(selectedCategory);\n  };\n\n  return (\n    <>\n      {/* Radio buttons for selecting a category */}\n      <CategoryStepContainer>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"your-pet\"\n          id=\"your-pet\"\n          checked={selectedCategory === 'your-pet'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"your-pet\">\n          {/* Initial selection is \"your pet\" */}\n          your pet\n        </CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"sell\"\n          id=\"sell\"\n          checked={selectedCategory === 'sell'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"sell\">sell</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"lost-found\"\n          id=\"lost-found\"\n          checked={selectedCategory === 'lost-found'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"lost-found\">lost/found</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"for-free\"\n          id=\"for-free\"\n          checked={selectedCategory === 'for-free'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"for-free\">in good hands</CategoryStepLabel>\n      </CategoryStepContainer>\n      <AddPetFormButtonWrapper>\n        <BackLink to={locRef.current}>Cancel</BackLink>\n        {/* Cancel button, must be changed to BackLink */}\n        <AddPetFormNextButton\n          type=\"button\"\n          onClick={onNext}\n          disabled={isDisabled}\n        >\n          {/* Proceed to the next step */}\n          Next\n          <PawIcon width={24} height={24}>\n            <use href={icons + '#pawprint'} />\n          </PawIcon>\n        </AddPetFormNextButton>\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default CategoryStep;\n","import { Field, ErrorMessage, useFormikContext } from 'formik';\nimport { useState, useEffect, useCallback } from 'react';\n\nconst PersonalDetailsStep = ({\n  onBack,\n  onNext,\n  selectedCategory,\n  setFormValues,\n}) => {\n  const { values, setTouched } = useFormikContext();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Function to validate form fields. useCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    // Validate title field if category is 'sell', 'lost-found' or 'for-free'\n    if (selectedCategory !== 'your-pet') {\n      if (!values.title) {\n        formErrors.title = 'Title is required';\n      }\n    }\n\n    // Validate name field\n    if (!values.name) {\n      formErrors.name = 'Name is required';\n    }\n\n    // Validate date field\n    if (!values.date) {\n      formErrors.date = 'Date of birth is required';\n    }\n\n    // Validate breed field\n    if (!values.breed) {\n      formErrors.breed = 'Breed is required';\n    } else if (values.breed.length < 2) {\n      formErrors.breed = 'Breed must be at least 2 characters';\n    } else if (values.breed.length > 16) {\n      formErrors.breed = 'Breed must be at most 16 characters';\n    }\n\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Handle next button click\n  const handleNextClick = () => {\n    setTouched({\n      title: true,\n      name: true,\n      date: true,\n      breed: true,\n    });\n\n    const formErrors = validateFields();\n\n    if (Object.keys(formErrors).length === 0) {\n      setFormValues(prevState => ({\n        ...prevState,\n        title: values.title,\n        name: values.name,\n        date: values.date,\n        breed: values.breed,\n      }));\n      onNext();\n    }\n  };\n\n  // Update disabled state based on form field validation\n  useEffect(() => {\n    const formErrors = validateFields();\n    setIsDisabled(Object.keys(formErrors).length > 0);\n  }, [values, selectedCategory, validateFields]); //  When any of these values change, the effect will run again to update the disabled state\n\n  return (\n    <>\n      {/* Field \"title\" is only for the \"sell\" and \"lost\" categories */}\n      {selectedCategory !== 'your-pet' && (\n        <div>\n          <label>\n            Title of add\n            <Field type=\"text\" name=\"title\" placeholder=\"Type title\" />\n          </label>\n          <ErrorMessage\n            name=\"title\"\n            component=\"div\"\n            className=\"error-message\"\n          />\n        </div>\n      )}\n\n      {/* Input field for capturing the name of the pet */}\n      <div>\n        <label>\n          Pet’s name\n          <Field type=\"text\" name=\"name\" placeholder=\"Type name pet\" />\n        </label>\n        <ErrorMessage name=\"name\" component=\"div\" className=\"error-message\" />\n      </div>\n      {/* Input field for capturing the date of birth of the pet */}\n      <div>\n        <label>\n          Date of birth\n          <Field type=\"text\" name=\"date\" placeholder=\"Type date of birth\" />\n        </label>\n        <ErrorMessage name=\"date\" component=\"div\" className=\"error-message\" />\n      </div>\n      {/* Input field for capturing the breed of the pet */}\n      <div>\n        <label>\n          Breed\n          <Field type=\"text\" name=\"breed\" placeholder=\"Type breed\" />\n        </label>\n        <ErrorMessage name=\"breed\" component=\"div\" className=\"error-message\" />\n      </div>\n      {/* Button to navigate to the previous step */}\n      <button type=\"button\" onClick={onBack}>\n        Back\n      </button>\n      {/* Button to navigate to the next step */}\n      <button type=\"button\" onClick={handleNextClick} disabled={isDisabled}>\n        Next\n      </button>\n    </>\n  );\n};\n\nexport default PersonalDetailsStep;\n","const ImageInput = ({ form, field }) => (\n  <input\n    name={field.name}\n    type=\"file\"\n    accept=\"image/*\"\n    onChange={e => form.setFieldValue(field.name, e.target.files[0])}\n  />\n);\n\nexport default ImageInput;\n","import { useState, useCallback, useEffect } from 'react';\nimport { Field, ErrorMessage, useFormikContext } from 'formik';\nimport ImageInput from 'components/ImageInput/ImageInput';\nconst MoreInfoStep = ({ onBack, selectedCategory, setFormValues }) => {\n  const { values, setTouched } = useFormikContext();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Function to validate form fields. useCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    if (selectedCategory !== 'your-pet') {\n      if (!values.sex) {\n        formErrors.sex = 'Sex is required';\n      }\n      if (!values.location) {\n        formErrors.location = 'Location is required';\n      }\n    }\n\n    if (selectedCategory === 'sell') {\n      if (!values.price) {\n        formErrors.price = 'Price is required';\n      }\n    }\n\n    if (!values.avatar) {\n      formErrors.avatar = 'Avatar is required';\n    }\n\n    // Validate breed field\n    if (!values.comments) {\n      formErrors.comments = 'Comments are required';\n    } else if (values.comments.length < 8) {\n      formErrors.comments = 'Comments must be at least 8 characters';\n    } else if (values.comments.length > 120) {\n      formErrors.comments = 'Comments must be at most 120 characters';\n    }\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Handle next button click\n  const handleSubmitClick = () => {\n    setTouched({\n      sex: true,\n      location: true,\n      price: true,\n      avatar: true,\n      comments: true,\n    });\n\n    const formErrors = validateFields();\n\n    if (Object.keys(formErrors).length === 0) {\n      setFormValues(prevState => ({\n        ...prevState,\n        sex: values.sex,\n        location: values.location,\n        price: values.price,\n        avatar: values.avatar,\n        comments: values.comments,\n      }));\n    }\n  };\n\n  // Update disabled state based on form field validation\n  useEffect(() => {\n    const formErrors = validateFields();\n    setIsDisabled(Object.keys(formErrors).length > 0);\n  }, [values, selectedCategory, validateFields]); //  When any of these values change, the effect will run again to update the disabled state\n\n  return (\n    <>\n      {/*     {/* Fields \"sex\" and \"location\" are only for the \"sell\" and \"lost\" categories */}\n      {['sell', 'lost-found'].includes(selectedCategory) && (\n        <>\n          <div>\n            <p>The sex</p>\n            <label>\n              Female\n              <Field type=\"radio\" name=\"sex\" value=\"female\" />\n            </label>\n\n            <label>\n              Male\n              <Field type=\"radio\" name=\"sex\" value=\"male\" />\n            </label>\n            <ErrorMessage\n              name=\"sex\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n          <div>\n            <label>\n              Location\n              <Field\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Type of location\"\n              />\n            </label>\n            <ErrorMessage\n              name=\"location\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n        </>\n      )}\n\n      {/* Field \"price\" is only for the \"sell\" category */}\n      {selectedCategory === 'sell' && (\n        <div>\n          <label>\n            Price\n            <Field\n              type=\"number\"\n              min=\"0\"\n              name=\"price\"\n              placeholder=\"Type of price\"\n            />\n          </label>\n          <ErrorMessage\n            name=\"price\"\n            component=\"div\"\n            className=\"error-message\"\n          />\n        </div>\n      )}\n\n      <div>\n        <label>\n          Load the pet’s image:\n          <Field name=\"avatar\" component={ImageInput} />\n        </label>\n        <ErrorMessage name=\"avatar\" component=\"div\" className=\"error-message\" />\n      </div>\n      {/* Field \"comments\" for additional comments */}\n      <div>\n        <label>\n          Comments\n          <Field\n            name=\"comments\"\n            rows=\"5\"\n            placeholder=\"Type breed\"\n            component=\"textarea\"\n          ></Field>\n        </label>\n        <ErrorMessage\n          name=\"comments\"\n          component=\"div\"\n          className=\"error-message\"\n        />\n      </div>\n\n      {/* Button to navigate to the previous step */}\n      <button type=\"button\" onClick={onBack}>\n        Back\n      </button>\n      {/* Button to submit the form */}\n      <button type=\"submit\" onClick={handleSubmitClick} disabled={isDisabled}>\n        Done\n      </button>\n    </>\n  );\n};\n\nexport default MoreInfoStep;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n  width: 280px;\n  min-height: 496px;\n  padding: 20px 8px 17px;\n  background-color: var(--cl-almost-white);\n  box-shadow: var(--shadow-default);\n  border-radius: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: 458px;\n    min-height: 542px;\n    padding: 20px 32px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(27 / 20);\n  padding-left: 20px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: calc(38 / 28);\n    padding-left: 32px;\n  }\n`;\n\nexport const Stepper = styled.ul`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: calc(14 / 10);\n  gap: 11px;\n  margin-bottom: 24px;\n  color: var(--cl-gray);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(26 / 16);\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StepperItem = styled.li`\n  position: relative;\n  padding-bottom: 20px;\n  flex-basis: calc((100% - 22px) / 3);\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 100%;\n    height: 8px;\n\n    background-color: var(--cl-blue-light);\n    border-radius: 8px;\n  }\n\n  &.active {\n    color: var(--cl-blue-link); /* Style for the active step */\n  }\n\n  &.active::after {\n    background-color: var(--cl-blue-link);\n  }\n\n  &.completed {\n    color: var(--cl-green); /* Style for the completed step */\n  }\n\n  &.completed::after {\n    background-color: var(--cl-green);\n  }\n`;\n","// Компонент містить в собі форму, що складається з наступних кроків:\n// - Сhoose option - на якому користувач обирає категорію оголошення\n// - Personal Details - на якому користувач заповнює детальну інформацію про улюбленця (імʼя, дату народження та його породу)\n// - More info - на якому користувач додає фотокартку улюбленця та особисті коментарі\n// Кнопка Cancel переадресовує користувача на сторінку, з якої він до того перейшов на сторінку AddPetPage.\n// Кнопка Next - активізує перевірку на валідність введеної користувачем інформації. У разі їх валідності - користувач переходить до наступного кроку заповнення форми. У разі введення користувачем невалідних значень - візуалізувати це йому у вигляді повідомлень\n// Кнопка Back - повертає користувача на попередній крок заповнення форми з полями, заповненими інформацією, яку ввів користувач до того\n// Кнопка Done - активізує перевірку на валідність введеної користувачем інформації. У разі їх валідності - відправляє запит на бекенд про створення картки з особистим домашнім улюбленцем користувача або про створення оголошення (в залежності від обраної користувачем категорії). У разі введення користувачем невалідних значень - візуалізувати це йому у вигляді повідомлень\n// Всі поля форми обов'язкові до заповнення\n// Після успішного створення картки, користувача необхідно переадресувата на сторінку UserPage або на сторінку NoticesPage (в залженості від обраної користувачем категорії). Якщо з бекенда було отримано помилку при створенні картки - користувачу необхідно вивести відповідну інформацію у вигляді нотіфікації\n\nimport { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { object, string, mixed, number } from 'yup';\nimport CategoryStep from 'components/CategoryStep/CategoryStep';\nimport PersonalDetailsStep from 'components/PersonalDetailsStep/PersonalDetailsStep';\nimport MoreInfoStep from 'components/MoreInfoStep/MoreInfoStep';\nimport {\n  FormContainer,\n  FormTitle,\n  Stepper,\n  StepperItem,\n} from './AddPetForm.styled';\n\n//   Validation schema using Yup\nconst validationSchema = object().shape({\n  category: string().oneOf(['your-pet', 'sell', 'lost-found', 'for-free']),\n  name: string()\n    .required('Name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be at most 16 characters'),\n  date: string()\n    .required('Date is required')\n    .matches(\n      /^\\s*(3[01]|[12][0-9]|0?[1-9])\\.(1[012]|0?[1-9])\\.((?:19|20)\\d{2})\\s*$/,\n      'Date must be in the format DD.MM.YYYY'\n    ),\n  breed: string()\n    .min(2, 'Breed must be at least 2 characters')\n    .max(16, 'Breed must be at most 16 characters')\n    .required('Breed is required'),\n  avatar: mixed()\n    .required('File is required')\n    //the test method from Yup to define a custom validation rule for the avatar field. The test checks if the value exists  (a file is selected) and if its size is less than or equal to 3MB (3 * 1024 * 1024 bytes). If the test fails, it will display the error message \"File size must not exceed 3MB\".\n    .test(\n      'fileSize',\n      'File size must not exceed 3MB',\n      value => value.size <= 3 * 1024 * 1024\n    ),\n  sex: string().when('category', {\n    is: value => ['sell', 'lost-found', 'for-free'].includes(value),\n    then: string()\n      .required('Sex is required')\n      .oneOf(['male', 'female'], 'Please select either \"male\" or \"female\"'),\n  }),\n\n  location: string()\n    .matches(\n      /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/,\n      'Invalid location format. Please use city names only.'\n    )\n    .min(2, 'City name must be at least 2 characters')\n    .required('Location is required'),\n  price: number()\n    .min(0, 'Price must be a positive number')\n    .integer('Price must be an integer')\n    .required('Price is required'),\n  comments: string()\n    .min(8, 'Comments must be at least 8 characters')\n    .max(120, 'Comments must be at most 120 characters')\n    .required('Comments are required'),\n\n  title: string()\n    .min(2, 'Title must be at least 2 characters')\n    .required('Title is required'),\n});\n\nconst AddPetForm = () => {\n  const [step, setStep] = useState(1);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [completedSteps, setCompletedSteps] = useState([]);\n\n  const [formValues, setFormValues] = useState({\n    category: selectedCategory,\n    name: '',\n    date: '',\n    breed: '',\n    avatar: '',\n    sex: '',\n    location: '',\n    price: '',\n    comments: '',\n    title: '',\n  });\n  const steps = ['Choose Option', 'Personal Details', 'More Info'];\n\n  const stepTitles = {\n    1: 'Add pet',\n    2: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add lost or found pet',\n      'for-free': 'Add pet for adoption',\n    },\n    3: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add lost or found pet',\n      'for-free': 'Add pet for adoption',\n    },\n  };\n\n  // Function to handle category selection\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setFormValues(prevFormValues => ({\n      ...prevFormValues,\n      category: category,\n    }));\n  };\n\n  const currentTitle =\n    typeof stepTitles[step] === 'string' ? stepTitles[step] : ''; // code checks if stepTitles[step] is a string, and if it is, assigns it to currentTitle.  Otherwise, it assigns an empty string.\n\n  const dynamicTitle =\n    step > 1\n      ? stepTitles[step][selectedCategory] || currentTitle\n      : currentTitle;\n\n  const handleNext = () => {\n    setCompletedSteps([...completedSteps, step]);\n    setStep(prevStep => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n\n    formData.append('category', formValues.category);\n    formData.append('name', formValues.name);\n    formData.append('date', formValues.date);\n    formData.append('breed', formValues.breed);\n    formData.append('avatar', formValues.avatar);\n    formData.append('comments', formValues.comments);\n\n    if (formValues.category === 'your-pet') {\n      // dispatch(addMyPet(formData))\n      return;\n    }\n\n    formData.append('title', formValues.title);\n    formData.append('sex', formValues.sex);\n    formData.append('location', formValues.location);\n\n    if (formValues.category === 'lost-found') {\n      // dispatch(addNotice({ category: 'lost-found', formData }));\n      return;\n    }\n\n    if (formValues.category === 'for-free') {\n      // dispatch(addNotice({ category: 'in-good-hands', formData }));\n      return;\n    }\n\n    formData.append('price', formValues.price);\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + pair[1]);\n    }\n\n    if (formValues.category === 'sell') {\n      // dispatch(addNotice({ category: 'sell', formData }));\n      return;\n    }\n  };\n\n  const renderStepContent = step => {\n    switch (step) {\n      case 1:\n        return (\n          <CategoryStep\n            onNext={handleNext}\n            onSelectCategory={handleCategorySelect}\n            selectedCategory={selectedCategory}\n          />\n        );\n      case 2:\n        return (\n          <PersonalDetailsStep\n            onBack={handleBack}\n            onNext={handleNext}\n            selectedCategory={selectedCategory}\n            setFormValues={setFormValues}\n          />\n        );\n      case 3:\n        return (\n          <MoreInfoStep\n            onBack={handleBack}\n            selectedCategory={selectedCategory}\n            setFormValues={setFormValues}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>{dynamicTitle}</FormTitle>\n      <Stepper>\n        {steps.map((name, index) => (\n          <StepperItem\n            key={index}\n            className={\n              step === index + 1\n                ? 'active'\n                : completedSteps.includes(index + 1)\n                ? 'completed'\n                : ''\n            }\n          >\n            {name}\n          </StepperItem>\n        ))}\n      </Stepper>\n      <Formik\n        initialValues={formValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>{renderStepContent(step)}</Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default AddPetForm;\n","// Компонент рендериться на маршрут /add-pet\n\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <div>\n      <AddPetForm />\n    </div>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["StyledLink","styled","Link","to","children","width","height","href","icons","CategoryStepContainer","RadioButton","Field","CategoryStepLabel","AddPetFormButtonWrapper","AddPetFormNextButton","PawIcon","onNext","onSelectCategory","selectedCategory","location","useLocation","locRef","useRef","state","from","useState","isDisabled","setIsDisabled","useEffect","handleCategoryChange","event","target","value","type","name","id","checked","onChange","htmlFor","current","onClick","disabled","onBack","setFormValues","useFormikContext","values","setTouched","validateFields","useCallback","formErrors","title","date","breed","length","Object","keys","placeholder","component","className","prevState","form","field","accept","e","setFieldValue","files","sex","price","avatar","comments","includes","min","ImageInput","rows","FormContainer","FormTitle","Stepper","StepperItem","validationSchema","object","shape","category","string","oneOf","required","max","matches","mixed","test","size","when","is","then","number","integer","step","setStep","setSelectedCategory","completedSteps","setCompletedSteps","formValues","stepTitles","sell","handleCategorySelect","prevFormValues","currentTitle","dynamicTitle","handleNext","prevStep","handleBack","map","index","initialValues","onSubmit","formData","FormData","append","entries","pair","console","log","renderStepContent"],"sourceRoot":""}