{"version":3,"file":"static/js/115.158575d5.chunk.js","mappings":"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","sources":["Redux/notices/selector.js","Redux/pets/selectors.js","components/AddPetForm/validationSchema.js","components/AddPetForm/AddPetFormButtons/BackLink.styled.jsx","components/AddPetForm/AddPetFormButtons/BackLink.js","components/AddPetForm/CategoryStep/CategoryStep.styled.jsx","components/AddPetForm/AddPetFormButtons/NextButton.styled.jsx","components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled.jsx","components/AddPetForm/CategoryStep/CategoryStep.js","components/AddPetForm/AddPetFormButtons/AddPetFormNextButton.js","components/AddPetForm/Input/Input.styled.jsx","components/AddPetForm/Error/Error.styled.js","components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep.styled.jsx","components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep.js","components/AddPetForm/MoreInfoStep/MoreInfoStep.styled.jsx","components/AddPetForm/MoreInfoStep/MoreInfoStep.js","components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.js","pages/AddPet.js"],"sourcesContent":["export const getNotices = state => state.notices.items;\n\nexport const getNotice = state => state.notices.item;\n\nexport const getIsLoadNotices = state => state.notices.isLoadNotices;\n\nexport const getIsLoadNotice = state => state.notices.isLoadNotice;\n\nexport const selectNoticesByCategory = state => state.notices.noticesByCategory;\n\nexport const getAddNoticeSuccessfulConnection = state =>\n  state.notices.isResponseSuccessful;\n\n  export const getPagination = state => state.notices.pagination;\n\n  export const getFuturePage = state => state.notices.futurePage;\n\n","\nexport const selectPets = state => state.pets.pets;\n\nexport const getAddPetSuccessfulConnection = state =>\n  state.pets.isResponseSuccessful;\n\nexport const getIsLoading = state => state.pets.isLoading;\n","import { object, string, mixed, number } from 'yup';\n\nconst nameRegexp = /^([a-zA-Zа-яА-ЯёЁёЁЇїІіҐґЄє\\s]+)$/;\nconst birthdayRegexp =\n  /^\\s*(3[01]|[12][0-9]|0?[1-9])\\.(1[012]|0?[1-9])\\.((?:19|20)\\d{2})\\s*$/;\n\n// Custom Yup test for birthday field\nconst validateBirthday = value => {\n  const birthday = new Date(value.replace(/(\\d+).(\\d+).(\\d+)/, '$3/$2/$1'));\n  const parsed = Date.parse(birthday);\n  const today = Date.now();\n  const diff = today - parsed;\n\n  if (diff < 0 || diff > 9467280000000 || isNaN(parsed)) {\n    return false;\n  }\n\n  return true;\n};\n\n//   Validation schema using Yup\nconst validationSchema = object().shape({\n  category: string().oneOf(['your-pet', 'sell', 'lost/found', 'in good hands']),\n  name: string()\n    .required('Name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be at most 16 characters')\n    .matches(nameRegexp, 'Name must contain only letters'),\n  date: string()\n    .required('Date is required')\n    .matches(birthdayRegexp, 'Date must be in the format DD.MM.YYYY')\n    .test('birthday', 'Invalid birthday', validateBirthday),\n  breed: string()\n    .min(2, 'Breed must be at least 2 characters')\n    .max(16, 'Breed must be at most 16 characters')\n    .required('Breed is required'),\n  avatar: mixed()\n    .required('File is required')\n    //the test method from Yup to define a custom validation rule for the avatar field. The test checks if the value exists  (a file is selected) and if its size is less than or equal to 3MB (3 * 1024 * 1024 bytes). If the test fails, it will display the error message \"File size must not exceed 3MB\".\n    .test(\n      'fileSize',\n      'File size must not exceed 3MB',\n      value => value.size <= 3 * 1024 * 1024\n    ),\n  sex: string().when('category', {\n    is: value => ['sell', 'lost/found', 'in good hands'].includes(value),\n    then: string()\n      .required('Sex is required')\n      .oneOf(['male', 'female'], 'Please select either \"male\" or \"female\"'),\n  }),\n\n  location: string()\n    .matches(\n      /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/,\n      'Invalid location format. Please use city names only.'\n    )\n    .min(2, 'City name must be at least 2 characters')\n    .required('Location is required'),\n  price: number()\n    .min(0, 'Price must be a positive number')\n    .integer('Price must be an integer')\n    .required('Price is required'),\n  comments: string()\n    .min(8, 'Comments must be at least 8 characters')\n    .max(300, 'Comments must be at most 300 characters')\n    .required('Comments are required'),\n\n  title: string()\n    .min(3, 'Title must be at least 3 characters')\n    .max(30, 'Title must be at most 30 characters')\n    .required('Title is required'),\n});\n\nexport default validationSchema;\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// Define a reusable CSS block using the css function\nexport const BackButton = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  color: var(--cl-blue-link);\n  background-color: transparent;\n  border: none;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  height: 22px;\n\n  transition: transform var(--animat), box-shadow var(--animat);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0.5em 0.5em -0.4em var(--hover);\n    transform: translateX(-0.25em);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  ${BackButton}\n  padding: 20px 0px;\n`;\n\nexport const AddPetBackButton = styled.button`\n  ${BackButton}\n\n  cursor: pointer;\n`;\n","import { StyledLink, AddPetBackButton } from './BackLink.styled';\nimport icons from 'images/icons.svg';\n\nconst BackLink = ({ isLink, buttonText, to, handleClick, type }) => {\n  if (isLink) {\n    return (\n      <StyledLink to={to} onClick={handleClick}>\n        <svg width={24} height={24}>\n          <use href={icons + '#arrow-left'} />\n        </svg>\n        {buttonText}\n      </StyledLink>\n    );\n  } else {\n    return (\n      <AddPetBackButton onClick={handleClick} type={type}>\n        <svg width={24} height={24}>\n          <use href={icons + '#arrow-left'} />\n        </svg>\n        {buttonText}\n      </AddPetBackButton>\n    );\n  }\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const CategoryStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n  margin-bottom: 91px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 137px;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const CategoryStepLabel = styled.label`\n  width: fit-content;\n  position: relative;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 40px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  letter-spacing: 0.04em;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-blue-light);\n\n  transition: background-color var(--animat), color var(--animat);\n\n  &:hover,\n  &:focus,\n  ${RadioButton}:checked + & {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: var(--cl-red);\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n`;\n","import styled from 'styled-components';\n\nexport const NextButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  background-color: var(--cl-blue-link);\n  min-width: 248px;\n  padding: 9px 0;\n  border: none;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  color: var(--cl-background);\n  border-radius: 40px;\n\n  transition: transform var(--animat), box-shadow var(--animat);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0.5em 0.5em -0.4em var(--hover);\n    transform: translateX(0.25em);\n  }\n`;\n\nexport const PawIcon = styled.svg`\n  fill: var(--cl-background);\n`;\n","import styled from 'styled-components';\nexport const AddPetFormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n","import { useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BackLink from '../AddPetFormButtons/BackLink';\nimport {\n  CategoryStepContainer,\n  CategoryStepLabel,\n  RadioButton,\n  ErrorMessage,\n} from './CategoryStep.styled';\nimport icons from '../../../images/icons.svg';\nimport {\n  NextButton,\n  PawIcon,\n} from 'components/AddPetForm/AddPetFormButtons/NextButton.styled';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\n\nconst CategoryStep = ({ onNext, onSelectCategory, selectedCategory }) => {\n  const location = useLocation();\n  const locRef = useRef(location.state?.from ?? '/'); // for Back button\n  const [nextClicked, setNextClicked] = useState(false); // State variable to track Next button click\n\n  const handleNext = () => {\n    setNextClicked(true); // Set nextClicked to true when Next button is clicked\n    if (selectedCategory) {\n      onNext();\n    }\n  };\n\n  // Update selected category when a radio button is changed\n  const handleCategoryChange = event => {\n    const selectedCategory = event.target.value;\n    onSelectCategory(selectedCategory);\n  };\n\n  return (\n    <>\n      {/* Radio buttons for selecting a category */}\n      <CategoryStepContainer>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"your-pet\"\n          id=\"your-pet\"\n          checked={selectedCategory === 'your-pet'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"your-pet\">your pet</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"sell\"\n          id=\"sell\"\n          checked={selectedCategory === 'sell'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"sell\">sell</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"lost/found\"\n          id=\"lost/found\"\n          checked={selectedCategory === 'lost/found'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"lost/found\">lost/found</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"in good hands\"\n          id=\"in good hands\"\n          checked={selectedCategory === 'in good hands'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"in good hands\">in good hands</CategoryStepLabel>\n        {!selectedCategory && nextClicked && (\n          <ErrorMessage>Please choose a category</ErrorMessage>\n        )}\n      </CategoryStepContainer>\n      <AddPetFormButtonWrapper>\n        <BackLink to={locRef.current} buttonText=\"Cancel\" isLink={true} />\n        {/* Cancel button, must be changed to BackLink */}\n        <NextButton type=\"button\" onClick={handleNext}>\n          {/* Proceed to the next step */}\n          Next\n          <PawIcon width={24} height={24}>\n            <use href={icons + '#pawprint'} />\n          </PawIcon>\n        </NextButton>\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default CategoryStep;\n","import { NextButton, PawIcon } from './NextButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst AddPetFormNextButton = ({ buttonText, type, onClick, disabled }) => {\n  return (\n    <NextButton type={type} onClick={onClick} disabled={disabled}>\n      {buttonText}\n      <PawIcon width={24} height={24}>\n        <use href={icons + '#pawprint'} />\n      </PawIcon>\n    </NextButton>\n  );\n};\n\nexport default AddPetFormNextButton;\n","import styled, { css } from 'styled-components';\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: ${props =>\n    props.theme === 'day' ? 'var(--cl-black)' : 'var(--cl-white)'};\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: calc(26 / 20);\n  }\n`;\n\nexport const Input = css`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  border-radius: 40px;\n  padding: 10px 16px;\n  color: var(--cl-gray);\n\n  background-color: transparent;\n\n  border: 1px solid\n    ${props => (props.errors ? 'var(--cl-red)' : 'var(--cl-blue-link)')};\n  outline: var(--cl-blue-link);\n  outline: var(--cl-blue-link);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport const Error = css`\n  color: var(--cl-red);\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n`;\n","import { Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\nimport { Input } from '../Input/Input.styled';\nimport { Error } from '../Error/Error.styled';\n\nexport const PersonalDetailsStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 44px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const PersonalDetailsField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const PersonalDetailsStepInput = styled(Field)`\n  ${Input}\n`;\n\nexport const ErrorMessageContainer = styled(ErrorMessage)`\n  ${Error}\n`;\n","import { useFormikContext } from 'formik';\nimport { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport AddPetFormNextButton from 'components/AddPetForm/AddPetFormButtons/AddPetFormNextButton';\nimport BackLink from '../AddPetFormButtons/BackLink';\nimport { Label } from '../Input/Input.styled';\nimport {\n  ErrorMessageContainer,\n  PersonalDetailsField,\n  PersonalDetailsStepContainer,\n  PersonalDetailsStepInput,\n} from './PersonalDetailsStep.styled';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\n\nconst PersonalDetailsStep = ({ onBack, onNext, selectedCategory }) => {\n  const { values, setTouched, touched, errors } = useFormikContext();\n  const theme = useSelector(state => state.main.theme);\n  // Function to validate form fields. UseCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    // Validate title field if category is 'sell', 'lost/found' or 'in good hands'\n    if (selectedCategory !== 'your-pet') {\n      if (!values.title) {\n        formErrors.title = 'Title is required';\n      }\n    }\n\n    // Validate name field\n    if (!values.name) {\n      formErrors.name = 'Name is required';\n    }\n\n    // Validate date field\n    if (!values.date) {\n      formErrors.date = 'Date of birth is required';\n    }\n\n    // Validate breed field\n    if (!values.breed) {\n      formErrors.breed = 'Breed is required';\n    } else if (values.breed.length < 2) {\n      formErrors.breed = 'Breed must be at least 2 characters';\n    } else if (values.breed.length > 16) {\n      formErrors.breed = 'Breed must be at most 16 characters';\n    }\n\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Handle next button click\n  const handleNextClick = () => {\n    // setTouched is called to mark all form fields as touched\n    setTouched({\n      title: true,\n      name: true,\n      date: true,\n      breed: true,\n    });\n\n    const formErrors = validateFields();\n\n    if (Object.keys(formErrors).length === 0) {\n      // Call the onNext function to proceed to the next step\n      onNext();\n    }\n  };\n\n  return (\n    <>\n      <PersonalDetailsStepContainer>\n        {/* Field \"title\" is only for the \"sell\" and \"lost\" categories */}\n        {selectedCategory !== 'your-pet' && (\n          <PersonalDetailsField>\n            <Label theme={theme}>\n              Title of add\n              <PersonalDetailsStepInput\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Type title\"\n                errors={touched.title && errors.title}\n              />\n            </Label>\n\n            <ErrorMessageContainer name=\"title\" component=\"div\" />\n          </PersonalDetailsField>\n        )}\n\n        {/* Input field for capturing the name of the pet */}\n        <PersonalDetailsField>\n          <Label theme={theme}>\n            Pet’s name\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              errors={touched.name && errors.name}\n            />\n          </Label>\n          <ErrorMessageContainer name=\"name\" component=\"div\" />\n        </PersonalDetailsField>\n        {/* Input field for capturing the date of birth of the pet */}\n        <PersonalDetailsField>\n          <Label theme={theme}>\n            Date of birth\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"date\"\n              placeholder=\"02.11.2014\"\n              errors={touched.date && errors.date}\n            />\n          </Label>\n          <ErrorMessageContainer name=\"date\" component=\"div\" />\n        </PersonalDetailsField>\n        {/* Input field for capturing the breed of the pet */}\n        <PersonalDetailsField>\n          <Label theme={theme}>\n            Breed\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              errors={touched.breed && errors.breed}\n            />\n          </Label>\n          <ErrorMessageContainer name=\"breed\" component=\"div\" />\n        </PersonalDetailsField>\n      </PersonalDetailsStepContainer>\n      <AddPetFormButtonWrapper>\n        {/* Button to navigate to the previous step */}\n        <BackLink\n          type=\"button\"\n          buttonText=\"Back\"\n          handleClick={onBack}\n          isLink={false}\n        />\n        {/* Button to navigate to the next step */}\n        <AddPetFormNextButton\n          type=\"button\"\n          onClick={handleNextClick}\n          buttonText=\"Next\"\n        />\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default PersonalDetailsStep;\n","import { Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\nimport { Input } from '../Input/Input.styled';\nimport { Error } from '../Error/Error.styled';\n\nexport const MoreInfoStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 60px;\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet'\n        ? 'flex-direction: row; column-gap: 45px'\n        : ''};\n  }\n`;\n\nexport const SexAvatarFieldWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n\n  ${({ selectedCategory }) =>\n    selectedCategory !== 'your-pet' ? 'flex-direction: column;' : ''}\n\n  @media screen and (min-width: 768px) {\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet' ? 'row-gap: 45px;' : ''};\n  }\n`;\n\nexport const LocationPriceCommentFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const SexFieldTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  margin-bottom: 8px;\n  color: ${props =>\n    props.theme === 'day' ? 'var(--cl-black)' : 'var(--cl-white)'};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(26 / 20);\n  }\n`;\n\nexport const SexRadioButtonsWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const SexLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  color: var(--cl-gray);\n\n  transition: color var(--animat);\n\n  &:hover,\n  &:focus,\n  ${RadioButton}:checked + & {\n    color: var(--cl-green);\n  }\n\n  & svg {\n    stroke: ${({ htmlFor }) => {\n      switch (htmlFor) {\n        case 'female':\n          return 'var(--cl-red)';\n        case 'male':\n          return 'var(--cl-blue-link)';\n        default:\n          return 'inherit';\n      }\n    }};\n  }\n`;\n\nexport const AvatarLabel = styled.label`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: ${props =>\n    props.theme === 'day' ? 'var(--cl-black)' : 'var(--cl-white)'};\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(26 / 20);\n\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet' ? 'flex-direction: column; gap: 8px' : ''}\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  object-position: center;\n  object-fit: cover;\n\n  & img {\n    width: 112px;\n    height: 112px;\n    border-radius: 20px;\n\n    @media screen and (min-width: 768px) {\n      width: 182px;\n      height: 182px;\n    }\n  }\n`;\n\nexport const AvatarField = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MoreInfoStepInput = styled(Field)`\n  ${Input}\n`;\n\nexport const MoreInfoStepTextArea = styled(Field)`\n  ${Input}\n  resize: none;\n  height: 92px;\n\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    height: 79px;\n    width: 395px;\n\n    ${({ category }) =>\n      category === 'in good hands' || category === 'lost/found'\n        ? 'height: 182px'\n        : ''}\n  }\n`;\n\nexport const ErrorMessageContainer = styled(ErrorMessage)`\n  ${Error}\n`;\n\nexport const SexErrorMessage = styled.div`\n  ${Error}\n`;\n","import { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFormikContext } from 'formik';\nimport { TailSpin } from 'react-loader-spinner';\nimport icons from '../../../images/icons.svg';\nimport { Label } from '../Input/Input.styled';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\nimport {\n  AvatarField,\n  AvatarLabel,\n  AvatarWrapper,\n  ErrorMessageContainer,\n  LocationPriceCommentFieldWrapper,\n  MoreInfoStepContainer,\n  MoreInfoStepInput,\n  MoreInfoStepTextArea,\n  RadioButton,\n  SexAvatarFieldWrapper,\n  SexErrorMessage,\n  SexFieldTitle,\n  SexLabel,\n  SexRadioButtonsWrapper,\n} from './MoreInfoStep.styled';\nimport BackLink from 'components/AddPetForm/AddPetFormButtons/BackLink';\nimport AddPetFormNextButton from 'components/AddPetForm/AddPetFormButtons/AddPetFormNextButton';\nimport { getIsLoadNotices } from 'Redux/notices/selector';\nimport { getIsLoading } from 'Redux/pets/selectors';\n\nconst MoreInfoStep = ({ onBack, selectedCategory, handleSubmit }) => {\n  const { values, setTouched, touched, errors, setFieldValue } =\n    useFormikContext();\n  const theme = useSelector(state => state.main.theme);\n  const [doneClicked, setDoneClicked] = useState(false); // State variable to track Next button click\n  const isAddNoticeLoading = useSelector(getIsLoadNotices);\n  const isAddPetLoading = useSelector(getIsLoading);\n\n  // Function to handle the file input change and set the selected avatar\n  const handleChange = event => {\n    setFieldValue('avatar', event.target.files[0]);\n  };\n\n  // Function to validate form fields. UseCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    // Validate sex and location field if category is not 'your-pet'\n    if (selectedCategory !== 'your-pet') {\n      if (!values.sex) {\n        formErrors.sex = 'Please select a sex';\n      }\n      if (!values.location) {\n        formErrors.location = 'Location is required';\n      }\n    }\n\n    // Validate price field\n    if (selectedCategory === 'sell') {\n      if (!values.price) {\n        formErrors.price = 'Price is required';\n      }\n    }\n\n    // Validate avatar field\n    if (!values.avatar) {\n      formErrors.avatar = 'Avatar is required';\n    }\n\n    // Validate comments field\n    if (!values.comments) {\n      formErrors.comments = 'Comments are required';\n    } else if (values.comments.length < 8) {\n      formErrors.comments = 'Comments must be at least 8 characters';\n    } else if (values.comments.length > 300) {\n      formErrors.comments = 'Comments must be at most 300 characters';\n    }\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Call the validateFields function to get the form errors\n  const formErrors = validateFields();\n\n  // Handle done button click\n  const handleSubmitClick = () => {\n    // Mark all form fields as touched\n    setTouched({\n      sex: true,\n      location: true,\n      price: true,\n      avatar: true,\n      comments: true,\n    });\n\n    setDoneClicked(true);\n\n    // Check if there are no form errors\n    if (Object.keys(formErrors).length === 0) {\n      // Call the handleSubmit function to submit the form\n      handleSubmit(values);\n    }\n  };\n\n  return (\n    <>\n      <MoreInfoStepContainer selectedCategory={selectedCategory}>\n        <SexAvatarFieldWrapper selectedCategory={selectedCategory}>\n          {/* Fields are for all categories except  the category 'your-pet' */}\n          {selectedCategory !== 'your-pet' && (\n            <div>\n              <SexFieldTitle theme={theme}>The sex</SexFieldTitle>\n              <SexRadioButtonsWrapper>\n                <RadioButton\n                  id=\"female\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"female\"\n                  checked={values.sex === 'female'}\n                />\n                <SexLabel htmlFor=\"female\">\n                  <svg width={24} height={24}>\n                    <use href={icons + '#female'} />\n                  </svg>\n                  Female\n                </SexLabel>\n                <RadioButton\n                  id=\"male\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"male\"\n                  checked={values.sex === 'male'}\n                />\n                <SexLabel htmlFor=\"male\">\n                  <svg width={24} height={24}>\n                    <use href={icons + '#male'} />\n                  </svg>\n                  Male\n                </SexLabel>\n              </SexRadioButtonsWrapper>\n              {formErrors.sex && doneClicked && (\n                <SexErrorMessage>{formErrors.sex}</SexErrorMessage>\n              )}\n            </div>\n          )}\n          <AvatarLabel selectedCategory={selectedCategory} theme={theme}>\n            Load the pet’s image:\n            <AvatarWrapper>\n              {!values.avatar ? (\n                <svg width={182} height={182}>\n                  <use href={icons + '#defaultAvatar'} />\n                </svg>\n              ) : (\n                <img\n                  src={URL.createObjectURL(values.avatar)}\n                  alt=\"Pet's avatar\"\n                  width=\"182\"\n                  height=\"182\"\n                />\n              )}\n              <AvatarField\n                accept=\"'image/png', 'image/jpg', 'image/jpeg'\"\n                name=\"avatar\"\n                type=\"file\"\n                onChange={handleChange}\n                errors={touched.avatar && errors.avatar}\n              />\n            </AvatarWrapper>\n            <ErrorMessageContainer name=\"avatar\" component=\"div\" />\n          </AvatarLabel>\n        </SexAvatarFieldWrapper>\n        <LocationPriceCommentFieldWrapper>\n          {selectedCategory !== 'your-pet' && (\n            <div>\n              <Label theme={theme}>\n                Location\n                <MoreInfoStepInput\n                  type=\"text\"\n                  name=\"location\"\n                  placeholder=\"Type of location\"\n                  errors={touched.location && errors.location}\n                />\n              </Label>\n              <ErrorMessageContainer name=\"location\" component=\"div\" />\n            </div>\n          )}\n\n          {/* Field \"price\" is only for the \"sell\" category */}\n          {selectedCategory === 'sell' && (\n            <div>\n              <Label theme={theme}>\n                Price\n                <MoreInfoStepInput\n                  type=\"number\"\n                  min=\"0\"\n                  name=\"price\"\n                  placeholder=\"Type of price\"\n                  errors={touched.price && errors.price}\n                />\n              </Label>\n              <ErrorMessageContainer name=\"price\" component=\"div\" />\n            </div>\n          )}\n\n          {/* Field \"comments\" for additional comments */}\n          <div>\n            <Label theme={theme}>\n              Comments\n              <MoreInfoStepTextArea\n                name=\"comments\"\n                placeholder=\"Type comments\"\n                component=\"textarea\"\n                category={selectedCategory}\n                errors={touched.comments && errors.comments}\n              ></MoreInfoStepTextArea>\n            </Label>\n            <ErrorMessageContainer\n              name=\"comments\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n        </LocationPriceCommentFieldWrapper>\n      </MoreInfoStepContainer>\n      {isAddNoticeLoading || isAddPetLoading ? (\n        <TailSpin\n          height=\"80\"\n          width=\"80\"\n          color=\"#54ADFF\"\n          ariaLabel=\"tail-spin-loading\"\n          radius=\"1\"\n          visible={true}\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        />\n      ) : (\n        <AddPetFormButtonWrapper>\n          {/* Button to navigate to the previous step */}\n          <BackLink\n            type=\"button\"\n            buttonText=\"Back\"\n            handleClick={onBack}\n            isLink={false}\n          />\n          {/* Button to submit the form */}\n\n          <AddPetFormNextButton\n            type=\"submit\"\n            onClick={handleSubmitClick}\n            // disabled={isDisabled}\n            buttonText=\"Done\"\n          />\n        </AddPetFormButtonWrapper>\n      )}\n    </>\n  );\n};\n\nexport default MoreInfoStep;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n  width: 280px;\n  min-height: 496px;\n  padding: 20px 8px 17px;\n  background-color: ${props =>\n    props.theme === 'day' ? 'var(--cl-almost-white)' : 'var(--cl-black)'};\n  box-shadow: var(--shadow-default);\n  border-radius: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: fit-content;\n    min-height: 542px;\n    padding: 20px 32px;\n\n    ${({ step }) => (step === 1 || step === 2 ? 'width: 458px' : '')}\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(27 / 20);\n  padding-left: 20px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: calc(38 / 28);\n    padding-left: 32px;\n  }\n`;\n\nexport const Stepper = styled.ul`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: calc(14 / 10);\n  gap: 11px;\n  margin-bottom: 24px;\n  color: var(--cl-gray);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(26 / 16);\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StepperItem = styled.li`\n  position: relative;\n  padding-bottom: 20px;\n  flex-basis: calc((100% - 22px) / 3);\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 100%;\n    height: 8px;\n\n    background-color: var(--cl-blue-light);\n    border-radius: 8px;\n  }\n\n  &.active {\n    color: var(--cl-blue-link); /* Style for the active step */\n  }\n\n  &.active::after {\n    background-color: var(--cl-blue-link);\n  }\n\n  &.completed {\n    color: var(--cl-green); /* Style for the completed step */\n  }\n\n  &.completed::after {\n    background-color: var(--cl-green);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { addNotice } from 'Redux/notices/operation';\nimport { addPet } from 'Redux/pets/operations';\nimport { getAddNoticeSuccessfulConnection } from 'Redux/notices/selector';\nimport { getAddPetSuccessfulConnection } from 'Redux/pets/selectors';\nimport validationSchema from './validationSchema';\nimport CategoryStep from 'components/AddPetForm/CategoryStep/CategoryStep';\nimport PersonalDetailsStep from 'components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep';\nimport MoreInfoStep from 'components/AddPetForm/MoreInfoStep/MoreInfoStep';\nimport {\n  FormContainer,\n  FormTitle,\n  Stepper,\n  StepperItem,\n} from './AddPetForm.styled';\n\nconst AddPetForm = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(state => state.main.theme);\n  const isAddNoticeResponseSuccessful = useSelector(\n    getAddNoticeSuccessfulConnection\n  );\n  const isAddPetResponseSuccessful = useSelector(getAddPetSuccessfulConnection);\n  const [step, setStep] = useState(1);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [completedSteps, setCompletedSteps] = useState([]);\n\n  const formValues = {\n    category: selectedCategory,\n    name: '',\n    date: '',\n    breed: '',\n    avatar: '',\n    sex: '',\n    location: '',\n    price: '',\n    comments: '',\n    title: '',\n  };\n  const steps = ['Choose Option', 'Personal Details', 'More Info'];\n\n  const stepTitles = {\n    1: 'Add pet',\n    2: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost/found': 'Add lost or found pet',\n      'in good hands': 'Add pet for adoption',\n    },\n    3: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost/found': 'Add lost or found pet',\n      'in good hands': 'Add pet for adoption',\n    },\n  };\n\n  // Function to handle category selection\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n  };\n\n  const currentTitle =\n    typeof stepTitles[step] === 'string' ? stepTitles[step] : ''; // code checks if stepTitles[step] is a string, and if it is, assigns it to currentTitle.  Otherwise, it assigns an empty string.\n\n  const dynamicTitle =\n    step > 1\n      ? stepTitles[step][selectedCategory] || currentTitle\n      : currentTitle;\n\n  const handleNext = () => {\n    setCompletedSteps([...completedSteps, step]);\n    setStep(prevStep => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n    // const { resetForm } = formikRef.current;\n\n    formData.append('name', values.name);\n    formData.append('birthday', values.date);\n    formData.append('breed', values.breed);\n    formData.append('imageURL', values.avatar);\n    formData.append('comments', values.comments);\n\n    if (selectedCategory === 'your-pet') {\n      dispatch(addPet({ formData }));\n      // resetForm();\n      return;\n    }\n\n    formData.append(\n      'categories',\n      selectedCategory === 'in good hands' ? 'in good hands' : selectedCategory\n    );\n    formData.append('title', values.title);\n    formData.append('sex', values.sex);\n    formData.append('place', values.location);\n\n    if (formValues.category === 'sell') {\n      formData.append('price', values.price);\n    }\n\n    dispatch(addNotice({ formData }));\n  };\n\n  if (isAddNoticeResponseSuccessful) {\n    return <Navigate to=\"/notices\" />;\n  }\n\n  if (isAddPetResponseSuccessful) {\n    return <Navigate to=\"/user\" />;\n  }\n\n  const renderStepContent = step => {\n    switch (step) {\n      case 1:\n        return (\n          <CategoryStep\n            onNext={handleNext}\n            onSelectCategory={handleCategorySelect}\n            selectedCategory={selectedCategory}\n          />\n        );\n      case 2:\n        return (\n          <PersonalDetailsStep\n            onBack={handleBack}\n            onNext={handleNext}\n            selectedCategory={selectedCategory}\n          />\n        );\n      case 3:\n        return (\n          <MoreInfoStep\n            onBack={handleBack}\n            selectedCategory={selectedCategory}\n            handleSubmit={handleSubmit}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <FormContainer step={step} theme={theme}>\n      <FormTitle>{dynamicTitle}</FormTitle>\n      <Stepper>\n        {steps.map((name, index) => (\n          <StepperItem\n            key={index}\n            className={\n              step === index + 1\n                ? 'active'\n                : completedSteps.includes(index + 1)\n                ? 'completed'\n                : ''\n            }\n          >\n            {name}\n          </StepperItem>\n        ))}\n      </Stepper>\n      <Formik initialValues={formValues} validationSchema={validationSchema}>\n        {() => <Form>{renderStepContent(step)}</Form>}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default AddPetForm;\n","// Компонент рендериться на маршрут /add-pet\n\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <div>\n      <AddPetForm />\n    </div>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["getNotices","state","notices","items","getNotice","item","getIsLoadNotices","isLoadNotices","getIsLoadNotice","isLoadNotice","getAddNoticeSuccessfulConnection","isResponseSuccessful","getPagination","pagination","getFuturePage","futurePage","selectPets","pets","getAddPetSuccessfulConnection","getIsLoading","isLoading","object","shape","category","string","oneOf","name","required","min","max","matches","date","test","value","birthday","Date","replace","parsed","parse","diff","now","isNaN","breed","avatar","mixed","size","sex","when","is","includes","then","location","price","number","integer","comments","title","BackButton","css","StyledLink","styled","Link","AddPetBackButton","isLink","buttonText","to","handleClick","type","onClick","width","height","href","icons","CategoryStepContainer","RadioButton","Field","CategoryStepLabel","ErrorMessage","NextButton","PawIcon","AddPetFormButtonWrapper","onNext","onSelectCategory","selectedCategory","useLocation","locRef","useRef","from","useState","nextClicked","setNextClicked","handleCategoryChange","event","target","id","checked","onChange","htmlFor","current","disabled","Label","props","theme","Input","errors","Error","PersonalDetailsStepContainer","PersonalDetailsField","PersonalDetailsStepInput","ErrorMessageContainer","onBack","useFormikContext","values","setTouched","touched","useSelector","main","validateFields","useCallback","formErrors","length","placeholder","component","Object","keys","MoreInfoStepContainer","SexAvatarFieldWrapper","LocationPriceCommentFieldWrapper","SexFieldTitle","SexRadioButtonsWrapper","SexLabel","AvatarLabel","AvatarWrapper","AvatarField","MoreInfoStepInput","MoreInfoStepTextArea","SexErrorMessage","handleSubmit","setFieldValue","doneClicked","setDoneClicked","isAddNoticeLoading","isAddPetLoading","src","URL","createObjectURL","alt","accept","files","className","color","ariaLabel","radius","visible","wrapperStyle","display","justifyContent","alignItems","FormContainer","step","FormTitle","Stepper","StepperItem","dispatch","useDispatch","isAddNoticeResponseSuccessful","isAddPetResponseSuccessful","setStep","setSelectedCategory","completedSteps","setCompletedSteps","formValues","stepTitles","sell","handleCategorySelect","currentTitle","dynamicTitle","handleNext","prevStep","handleBack","formData","FormData","append","addNotice","addPet","renderStepContent","map","index","initialValues","validationSchema"],"sourceRoot":""}