{"version":3,"file":"static/js/370.6178f816.chunk.js","mappings":"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","sources":["Redux/pets/selectors.js","components/AddPetButton/AddPetButton.styled.jsx","components/AddPetButton/AddPetButton.js","components/ModalApproveAction/ModalApproveAction.styled.jsx","components/ModalApproveAction/ModalApproveAction.js","components/ModalCongrats/ModalCongrats.styled.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.js","components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.js","components/PetsData/PetsData.styled.js","components/PetsData/PetsData.js","components/ModalCongrats/ModalCongrats.js","components/UserData/UserData.styled.jsx","components/UserData/UserData.js","pages/User.js"],"sourcesContent":["\nexport const selectPets = state => state.pets.pets;\n\nexport const getAddPetSuccessfulConnection = state =>\n  state.pets.isResponseSuccessful;\n\nexport const getIsLoading = state => state.pets.isLoading;\n","import styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-background);\n  fill: transparent;\n`;\n\nexport const Button = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 129px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-background);\n  background-color: var(--cl-blue-link);\n\n  transition: background-color var(--animat), border-color var(--animat);\n\n  &:hover,\n  &:focus {\n    color: var(--cl-blue-link);\n    background-color: var(--cl-almost-white);\n\n    svg {\n      stroke: var(--cl-blue-link);\n    }\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  ${Button}\n`;\n\nexport const AddButton = styled.button`\n  ${Button}\n`;\n\nexport const NavLinkWrapper = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n","import {\n  Link,\n  AddButton,\n  AddIcon,\n  NavLinkWrapper,\n} from './AddPetButton.styled.jsx';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport icons from 'images/icons.svg';\nimport { getConnect } from 'Redux/auth/selector.js';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\n\nimport {\n  DescrModal,\n  ModalContent,\n} from './../ModalCongrats/ModalCongrats.styled';\n\nimport {\n  ButtonLogin,\n  ButtonRegister,\n  PawCss,\n} from 'components/AuthNav/AuthNav.styled.jsx';\n\nconst AddPetButton = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(getConnect);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleUnauthorizedClick = () => {\n    setIsOpenModal(true);\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <Link to={`/add-pet`} state={{ from: location }}>\n          Add Pet\n          <AddIcon>\n            <use href={icons + '#plus-small'} />\n          </AddIcon>\n        </Link>\n      ) : (\n        <>\n          <AddButton type=\"button\" onClick={handleUnauthorizedClick}>\n            Add Pet\n            <AddIcon>\n              <use href={icons + '#plus-small'} />\n            </AddIcon>\n          </AddButton>\n          {isOpenModal && (\n            <ModalApproveAction onClose={toggleModal}>\n              <ModalContent>\n                <DescrModal>\n                  Please log in or register to use this functionality.\n                </DescrModal>\n\n                <NavLinkWrapper>\n                  <NavLink to=\"/login\">\n                    <ButtonLogin>\n                      Log IN\n                      <PawCss width={21} height={24}>\n                        <use href={icons + '#pawprint'} />\n                      </PawCss>\n                    </ButtonLogin>\n                  </NavLink>\n                  <NavLink to=\"/register\">\n                    <ButtonRegister>Registration</ButtonRegister>\n                  </NavLink>\n                </NavLinkWrapper>\n              </ModalContent>\n            </ModalApproveAction>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AddPetButton;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(43, 43, 43, 0.6);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: 280px;\n  max-height: 590px; //найменша висота телефону\n  overflow-y: auto;\n  overflow-x: hidden;\n  \n  background-color: var(--cl-almost-white);\n  box-shadow: var(--shadow-default);\n  border-radius: 20px;\n\n  @media (min-width: 768px) {\n    width: ${props => props.width ? \"681px\" : \"608px\"};\n    border-radius: 40px;\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n`\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  padding: 0;\n\n  background-color: var(--cl-almost-white);\n  color: var(--cl-blue-link);\n  border: none;\n\n  cursor: pointer;\n\n  transition: transform var(--animat);\n\n  @media (min-width: 768px) {\n    top: 29px;\n    right: 29px;\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    transform: scale(1.2);\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n`;\n","// Перевикористовуємий компонент, що рендерить у модальному вікні питання, отримане у вигляді childrens,\n// та 2 функціональні кнопки. Модальне вікно повинно закриватись по кліку на кнопку Cancel,\n// по кліку на кнопку закриття, клік по бекдропу, а також клік по Escape.\n// По кліку на Yes необхідно викликати функцію, передану в ModalApproveAction у вигляді props на випадок згоди користувача\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Button, CloseIcon, Content, Modal, Overlay } from './ModalApproveAction.styled';\nimport icons from 'images/icons.svg';\n\nexport const ModalApproveAction = ({ children, onClose, width}) => {\n  //   пропс onClose це функція toggleModal,\n  //   яку потрібно передати компоненту ModalApproveAction\n  //   toggleModal - змінює стейт isOpen\n\n  const onBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n    document.body.style.overflow= \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"visible\";\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [onClose]);\n\n  return (\n    <>\n      <Overlay onClick={onBackdropClose}>\n        <Modal width={width ? width=\"true\" : undefined }>\n          <Button type=\"button\" apia-label=\"close\" onClick={onClose}>\n            <CloseIcon>\n              <use href={icons + '#cross-small'} />\n            </CloseIcon>\n          </Button>\n          <Content>{children}</Content>\n        </Modal>\n      </Overlay>\n    </>\n  );\n};\n\nModalApproveAction.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  width: PropTypes.any\n};\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  padding: 68px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 60px 0 60px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 33px;\n\n  padding: 0;\n  margin-top: 0px;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 36px;\n    line-height: 49px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const DescrModal = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 22px;\n  text-align: center;\n\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 33px;\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  padding: 0;\n  width: 248px;\n  height: 40px;\n\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n\n  border: 2px solid var(--animat);\n  border-radius: 40px;\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n  }\n`;\n\nexport const PawPrint = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 77px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 108px 0 108px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-size: 24px;\n  line-height: 33px;\n  font-weight: 500;\n\n  padding-bottom: 48px;\n\n  @media (min-width: 768px) {\n    font-weight: 700;\n    font-size: 36px;\n    line-height: 49px;\n    padding-bottom: 48px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 17px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  width: 256px;\n  height: 40px;\n  padding: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background: transparent;\n  \n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 129px;\n  }\n\n  transition: background var(--animat), background-color var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: var(--cl-background);\n    background: var(--gr-blue);\n    border: var(--gr-blue);\n  }\n`;\n\nexport const ButtonYes = styled(Button)`\n  border: 2px solid var(--animat);\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  transition: none;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n  }\n`;\n\nexport const Arrow = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\nexport const ArrowBack = styled.svg`\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const BtnLogout = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n\n  width: 98px;\n  height: 30px;\n\n  font-weight: 500;\n  font-family: 'Manrope';\n  font-size: 16px;\n\n  border: none;\n  background-color: transparent;\n`;\n","// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Arrow,\n  Button,\n  ButtonWrap,\n  ModalContent,\n  TitleModal,\n  BtnLogout,\n  ArrowBack,\n  \n  //Олексій\n  ButtonYes,\n} from './Logout.styled';\n\n//Олексій\n// } from './UserPage.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { Navigate } from 'react-router-dom';\nimport { getConnect } from 'Redux/auth/selector';\n\nexport const LogoutBtn = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    // console.log('Передаємо екшн');\n    dispatch(logOut());\n};\nconst isConnect = useSelector(getConnect);\nif (!isConnect) {\n  return (< Navigate to = \"/\" replace />)\n}\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal} >\n          <ModalContent>\n            <TitleModal>Already leaving?</TitleModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <ButtonYes type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Arrow>\n                  <use href={icons + '#logout'} />\n                </Arrow>\n              </ButtonYes>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalApproveAction>\n      )}\n\n      <BtnLogout type=\"button\" onClick={toggleModal}>\n      <ArrowBack><use href={icons + '#logout'}/></ArrowBack>\n        LogOut\n      </BtnLogout>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  padding: 16px 20px 40px 20px;\n  width: 280px;\n  background-color: var(--cl-almost-white);\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    width: 703px;\n    padding: 20px;\n    border-radius: 40px;\n  }\n  @media (min-width: 1280px) {\n    display: flex;\n    width: 821px;\n  }\n`;\nexport const Photo = styled.img`\n  background-color: gray;\n  margin-bottom: 20px;\n  width: 240px;\n  height: 240px;\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 128px;\n    height: 128px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 161px;\n    height: 161px;\n    margin-right: 32px;\n    border-radius: 40px;\n  }\n`;\n\nexport const Description = styled.div`\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 515px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 580px;\n  }\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 12px;\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\nexport const Breed = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport const LastLabel = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\n\nexport const Text = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\nexport const LastText = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  width: 240px;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.57;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 272px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-color: var(--cl-almost-white);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 0;\n  right: 0;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n\n  @media screen and (min-width: 768px) {\n    top: 0;\n    right: 0;\n  }\n`;\n\nexport const ModalContainer = styled.div`\n  padding: 60px 5px 60px 5px;\n  color: var(--cl-black);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  letter-spacing: -0.01em;\n`;\nexport const ModalTitle = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  text-align: center;\n  line-height: 1.36;\n  padding: 0;\n  margin: 0px;\n  margin-bottom: 40px;\n`;\n\nexport const ModalText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  margin-bottom: 48px;\n`;\nexport const ModalItem = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n`;\n\nexport const ModalButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 120px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n  cursor: pointer;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n  @media screen and (min-width: 768px) {\n    width: 129px;\n  }\n`;\n\nexport const ModalIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { deletePet } from 'Redux/pets/operations';\nimport icons from 'images/icons.svg';\nimport {\n  Card,\n  Photo,\n  Label,\n  LastLabel,\n  Text,\n  Icon,\n  Btn,\n  Breed,\n  Description,\n  LastText,\n  ModalContainer,\n  ModalTitle,\n  ModalText,\n  ModalItem,\n  ModalButton,\n  Button,\n  ModalIcon,\n} from './PetsItem.styled';\n\nexport const PetsItem = ({\n  item: { _id, name, imageURL, birthday, breed, comments },\n}) => {\n  const dispatch = useDispatch();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleDeletePet = () => {\n    dispatch(deletePet(_id));\n    setIsOpenModal(false);\n  };\n\n  return (\n    <Card>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal}>\n          <ModalContainer>\n            <ModalTitle>Delete your pet?</ModalTitle>\n            <ModalText>\n              Are you sure want to delete a <ModalItem>“{name}?”</ModalItem>\n              <br />\n              You can`t undo this action.\n            </ModalText>\n            <ModalButton>\n              <Button type=\"button\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <Button type=\"button\" onClick={handleDeletePet}>\n                Yes\n                <ModalIcon>\n                  <use href={icons + '#trash'} />\n                </ModalIcon>\n              </Button>\n            </ModalButton>\n          </ModalContainer>\n        </ModalApproveAction>\n      )}\n      <div>\n        <Photo src={imageURL} alt={name} width=\"240\" height=\"240\" />\n        <Btn type=\"button\" onClick={toggleModal}>\n          <Icon>\n            <use href={icons + '#trash'} />\n          </Icon>\n        </Btn>\n      </div>\n\n      <Description>\n        <Label>\n          Name: <Text>{name}</Text>\n        </Label>\n        <Label>\n          Date of birth: <Text>{birthday}</Text>\n        </Label>\n        <Breed>\n          Breed: <Text>{breed}</Text>\n        </Breed>\n        <LastLabel>\n          Comments: &nbsp;<LastText>{comments}</LastText>\n        </LastLabel>\n      </Description>\n    </Card>\n  );\n};\n\nPetsItem.propTypes = {\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    breed: PropTypes.string.isRequired,\n    comments: PropTypes.string.isRequired,\n    imageURL: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\ngap: 20px;\n`","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPets } from 'Redux/pets/selectors';\nimport { PetsItem } from 'components/PetsItem/PetsItem';\nimport { List } from './PetsList.styled';\nimport { fetchPets } from 'Redux/pets/operations';\n\nexport const PetsList = () => {\n  const pets = useSelector(selectPets);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n \n\n  return (\n    <List>\n      {pets.map((pet) => (\n        <li key={pet._id}>\n          <PetsItem item={pet} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 280px;\n  margin: auto;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    width: 703px;\n    margin-bottom: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 20px;\n    width: 821px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { PetsList } from 'components/PetsList/PetsList';\nimport { Container, Title } from './PetsData.styled';\nimport { useState } from 'react';\nimport AddPetButton from 'components/AddPetButton/AddPetButton';\n\nexport const PetsData = () => {\n  const [showPreviousPage, setShowPreviousPage] = useState(true);\n\n  const handleChangePage = () => {\n    setShowPreviousPage(false);\n  };\n\n  return (\n    <>\n      {showPreviousPage && (\n        <div>\n          <Container>\n            <Title>My Pets:</Title>\n\n            <AddPetButton onClick={handleChangePage}>\n              <Link to=\"/add-pet\">add</Link>\n            </AddPetButton>\n          </Container>\n          <PetsList />\n        </div>\n      )}\n    </>\n  );\n};\n","import { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\n\nimport icons from 'images/icons.svg';\nimport {\n  PawPrint,\n  DescrModal,\n  ModalContent,\n  TitleModal,\n  Button,\n} from './ModalCongrats.styled';\n\nexport const ModalCongrats = () => {\n    // toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n\n      {!isOpenModal && (\n        <ModalApproveAction onClose={toggleModal}> \n          <ModalContent>\n            <TitleModal>Congrats!</TitleModal>\n            <DescrModal>You`re registration is success</DescrModal>\n\n            <Button\n              type=\"button\"\n              aria-label=\"go to profile\"\n              onClick={toggleModal}\n            >\n              Go to profile\n              <PawPrint>\n                <use href={icons + '#pawprint'} />\n              </PawPrint>\n            </Button>\n          </ModalContent>\n        </ModalApproveAction>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const MainContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media screen and (min-width: 767px) {\n    padding: 32px;\n    width: 768px;\n  }\n  @media screen and (min-width: 991px) {\n    flex-direction: row;\n    padding: 30px, 16px, 30px, 16px;\n    width: 1280px;\n  }\n`;\nexport const Box = styled.div`\n  margin: 0 auto;\n\n  @media screen and (min-width: 767px) {\n    margin: 0;\n  }\n`;\n\nexport const TitleCard = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  margin-bottom: 18px;\n  @media screen and (min-width: 767px) {\n    margin-bottom: 24px;\n    font-weight: 500;\n    font-size: 28px;\n    line-height: 38px;\n  }\n`;\n\nexport const FormContainer = styled(Form)`\n  position: relative;\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 25px;\n\n  background-color: var(--cl-almost-white);\n\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n  /* margin: 0 auto; */\n  /* margin: 0 auto; */\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 767px) {\n    width: 704px;\n    height: 268px;\n    padding: 20px 20px;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n    gap: 71px;\n  }\n\n  @media screen and (min-width: 991px) {\n    width: 395px;\n    height: 520px;\n    padding: 20px 24px 16px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 25px;\n    margin-right: 32px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\ndisplay: flex;\n\nalign-items: center;\njustify-content: center;\n\nwidth: 182px;\n  height: 182px;\n  margin-bottom: 14px;\n\n  border-radius: 40px;\n`;\nexport const ImgAvatar = styled.img`\nheight: 100%;\n  border-radius: 40px;\n`;\nexport const SvgIcon = styled.svg`\n  margin-right: 8px;\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\nexport const InputAvatar = styled(Field)`\n  width: 96px;\n  visibility: hidden;\n`;\nexport const BtnPhoto = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 96px;\n  height: 28px;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const BtnText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 22px;\n`;\n\nexport const BtnCheck = styled.button`\n  position: absolute;\n  right: 15px;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 0px;\n    left: 0px;\n  }\n  @media screen and (min-width: 991px) {\n    position: absolute;\n\n    left: 315px;\n  }\n`;\n\nexport const InputContainer = styled(Field)`\n  padding: 6px 12px;\n  width: 190px;\n  height: 28px;\n\n  background-color: var(--cl-almost-white);\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 12px;\n  &: focus {\n    outline: none;\n  }\n\n  @media screen and (min-width: 767px) {\n    padding: 6px 12px;\n    width: 255px;\n    height: 32px;\n    cursor: pointer;\n    &: focus {\n      outline: none;\n    }\n    }\n\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n\n  @media screen and (min-width: 991px) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n`;\n\nexport const DIV = styled.div`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n  margin: 12px auto;\n\n  @media screen and (min-width: 767px) {\n    margin: 8px auto;\n    width: 355px;\n    height: 32px;\n  }\n  \n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  right: 30px;\n\n  bottom: 227px;\n  font-weight: 400;\n  font-size: 9px;\n  line-height: 14px;\n  color: #da1414;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 50px;\n    bottom: 215px;\n    font-size: 10px;\n  }\n\n  @media screen and (min-width: 991px) {\n    position: absolute;\n    right: 50px;\n    bottom: 215px;\n    font-size: 10px;\n  }\n`;\n\nexport const StyledErrorMessageEmail = styled(ErrorMessage)`\n  position: absolute;\n  right: 30px;\n  bottom: 187px;\n  font-weight: 400;\n  font-size: 9px;\n  line-height: 14px;\n  color: #da1414;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 50px;\n    bottom: 215px;\n    font-size: 10px;\n  }\n\n  @media screen and (min-width: 991px) {\n    position: absolute;\n    right: 50px;\n    bottom: 175px;\n    font-size: 10px;\n  }\n`;\n\n\nexport const StyledErrorMessagePhone = styled(ErrorMessage)`\n  position: absolute;\n  right: 25px;\n  bottom: 108px;\n  font-weight: 400;\n  font-size: 9px;\n  line-height: 14px;\n  color: #da1414;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 50px;\n    bottom: 215px;\n\n  }\n\n  @media screen and (min-width: 991px) {\n    position: absolute;\n    right: 40px;\n    bottom: 93px;\n\n  }\n`;\n\nexport const StyledErrorMessageCity = styled(ErrorMessage)`\n  position: absolute;\n  right: 25px;\n  bottom: 65px;\n  font-weight: 400;\n  font-size: 9px;\n  line-height: 14px;\n  color: #da1414;\n\n  @media screen and (min-width: 767px) {\n    position: absolute;\n    right: 50px;\n    bottom: 215px;\n  }\n\n  @media screen and (min-width: 991px) {\n    position: absolute;\n    right: 40px;\n    bottom: 44px;\n\n  }\n`;\n\nexport const SVGBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-green);\n  fill: transparent;\n`;\n\nexport const BtnEdit = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: var(--cl-blue-link);\n`;\n\nexport const ImgCon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Photosvg = styled.svg`\n  width: 182px;\n  height: 182px;\n  fill: transparent;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectorNewUser, selectUser } from 'Redux/auth/selector';\nimport { updateUser } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { LogoutBtn } from 'components/Logout/Logout';\nimport { PetsData } from 'components/PetsData/PetsData';\nimport { ModalCongrats } from 'components/ModalCongrats/ModalCongrats';\n\n\nimport {\n  MainContainer,\n  Box,\n  TitleCard,\n  FormContainer,\n  BtnCheck,\n  InputContainer,\n  Label,\n  InputAvatar,\n  StyledErrorMessage,\n  StyledErrorMessageEmail,\n  StyledErrorMessagePhone,\n  StyledErrorMessageCity,\n  BtnText,\n  BtnPhoto,\n  ImgContainer,\n  SvgIcon,\n  SVGBtn,\n  DIV,\n  ImgCon,\n  Photosvg,\n  ImgAvatar,\n  BtnEdit,\n} from './UserData.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).max(16, 'length must be less then 15').required(),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'please enter a valid email')\n    .email('invalid e-mail')\n    .required(),\n  birthday: yup.date('please enter a valid date 00.00.0000').nullable(),\n  phone: yup\n    .string()\n    .matches(/^\\+380\\d{9}$/, 'enter phone number in format +380')\n    .nullable(),\n  city: yup.string().min(3).max(16, 'length must be less then 16').nullable(),\n});\n\n\nconst Camera = () => {\n  return (\n    <BtnPhoto>\n      <SvgIcon>\n        <use href={icons + '#camera'} />\n      </SvgIcon>\n      <BtnText>Edit photo</BtnText>\n    </BtnPhoto>\n  );\n};\n\nconst CheckBlue = () => {\n  return (\n    <BtnPhoto>\n      <SvgIcon>\n        <use href={icons + '#check'} />\n      </SvgIcon>\n      <BtnText>Confirm</BtnText>\n    </BtnPhoto>\n  );\n};\n\nexport const UserData = () => {\n  const newUser = useSelector(selectorNewUser);\n\n  const [isNewUser, setIsNewUser] = useState(newUser);\n\n  const handleCongratsOut = () => {\n    setIsNewUser(false);\n  };\n\n \n  const dispatch = useDispatch();\n  const [toggleIconPass, setToggleIconPass] = useState(Camera);\n\n  const user = useSelector(selectUser);\n  console.log(user);\n  const avatarURL = user.avatarURL;\n  const name = user.name;\n  const email = user.email;\n  const phone = user.phone;\n  const birthday = user.birthday;\n  const city = user.city;\n\n\n  const [userImage, setUserImage] = useState(avatarURL);\n  const [avatar, setAvatar] = useState(avatarURL);\n \n  const [isEditingName, setIsEditingName] = useState(false);\n  const [isEditingEmail, setIsEditingEmail] = useState(false);\n  const [isEditingBirthday, setIsEditingBirthday] = useState(false);\n  const [isEditingPhone, setIsEditingPhone] = useState(false);\n  const [isEditingCity, setIsEditingCity] = useState(false);\n\n  const handleChangeAvatar = e => {\n    const file = e.target.files[0];\n    const objURL = URL.createObjectURL(file);\n    setAvatar(objURL);\n    setUserImage(file);\n};\nconst formData = new FormData();\n  const handleSubmitInput = async (values) => {\n    if (userImage) {\n      formData.append('avatarURL', userImage);\n  }\n    if(values.name){\n      formData.append('name', values.name);\n    }\n if(values.email){\n  formData.append('email', values.email);}\n    \n    if (values.phone) {\n      formData.append('phone', values.phone);\n    }\n    if (values.city) {\n      formData.append('city', values.city);\n    }\n    if (values.birthday) {\n      formData.append('birthday', values.birthday);\n    }\n    await dispatch(updateUser(formData));\n  };\n\n\n\n  return (\n    <MainContainer>\n      {isNewUser && (\n        <div onClick={handleCongratsOut}><ModalCongrats /></div>\n      ) }\n    <Box>\n      <TitleCard>My information:</TitleCard>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n          avatarURL: avatarURL,\n          name: name,\n          email: email,\n          phone: phone,\n          birthday: birthday,\n          city: city,\n        }}\n\n        validationSchema={schema}\n        onSubmit={handleSubmitInput}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleSubmit,\n          handleChange,\n          handleBlur,\n     \n        }) => (\n          <FormContainer autoComplete=\"off\" >\n            <ImgCon htmlFor=\"avatar\">\n              <ImgContainer>\n                {!avatar ? (\n                  <Photosvg>\n                    <use href={icons + '#photodefault'} />\n                  </Photosvg>\n\n                  \n                ) : (<ImgAvatar\n                  src={avatar}\n                  alt=\"Photo user\"\n                />\n                  \n                )}\n              </ImgContainer>\n\n              <label\n                onClick={() => setToggleIconPass(CheckBlue)}\n                onSubmit={handleSubmit}\n              >\n                {toggleIconPass}\n                <InputAvatar\n                  id=\"avatar\"\n                  type=\"file\"\n                  name=\"avatar\"\n                  onBlur={handleBlur}\n                  onChange={handleChangeAvatar}\n                  accept=\"image/*,.png,.jpg,.gif,.web\"\n                />\n              </label>\n            </ImgCon>\n            <div>\n              <DIV htmlFor=\"name\">\n                <Label>Name: </Label>\n                {isEditingName ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    errors={errors.name}\n                  />\n                ) : (\n                  <InputContainer \n                  type=\"text\" \n                  name=\"name\" \n                  id=\"name\" \n                  value={values.name} \n                  errors={errors.name}\n                  onBlur={handleBlur}\n                   />\n                )}\n                {isEditingName ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingName(false)}\n                    onSubmit={handleSubmit}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck  type=\"button\" onClick={() => setIsEditingName(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n            <StyledErrorMessage name=\"name\" component=\"div\"/>\n              </DIV>\n\n              <DIV htmlFor=\"email\">\n                <Label>Email: </Label>\n                {isEditingEmail ? (\n                  <InputContainer\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    value={values.email}\n                    errors={errors.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  /> \n                ) : (\n                  <InputContainer \n                  type=\"email\" \n                  name=\"email\" \n                  id=\"email\" \n                  value={values.email} \n                  errors={errors.email}\n                  onBlur={handleBlur} \n\n                  />\n                )}\n                {isEditingEmail ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingEmail(false)}\n                    onSubmit={handleSubmit}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck  type=\"button\" onClick={() => setIsEditingEmail(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n                 <StyledErrorMessageEmail name=\"email\" component=\"div\"/>\n              </DIV>\n\n              <DIV htmlFor=\"birthday\">\n                <Label>Birthday: </Label>\n                {isEditingBirthday ? (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    id=\"birthday\"\n                    value={values.birthday}\n                    errors={errors.birthday}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                ) : (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    id=\"birthday\"\n                    value={values.birthday}\n                    errors={errors.birthday}\n              \n                    onBlur={handleBlur}\n                  />\n                )}\n                {isEditingBirthday ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingBirthday(false)}\n                    onSubmit={handleSubmit}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck type=\"button\" onClick={() => setIsEditingBirthday(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n              <DIV htmlFor=\"phone\">\n                <Label>Phone: </Label>\n                {isEditingPhone ? (\n                  <InputContainer\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    value={values.phone}\n                    errors={errors.phone}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  \n                  />\n                ) : (\n                  <InputContainer \n                  type=\"tel\" \n                  name=\"phone\" \n                   id=\"phone\" \n                   value={values.phone} \n                   errors={errors.phone}\n                   placeholder=\"+380000000000\"\n                   onBlur={handleBlur}\n                   />\n                \n                )}\n                {isEditingPhone ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingPhone(false)}\n                    onSubmit={handleSubmit}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck type=\"button\" onClick={() => setIsEditingPhone(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n                 <StyledErrorMessagePhone name=\"phone\" component=\"div\"/>\n              </DIV>\n\n              <DIV htmlFor=\"city\">\n                <Label>City: </Label>\n                {isEditingCity ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    value={values.city}\n                    errors={errors.city}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                ) : (\n                  <InputContainer \n                  type=\"text\" \n                  name=\"city\" \n                  id=\"city\" \n                  value={values.city} \n                  errors={errors.city}\n                  onBlur={handleBlur}\n                  placeholder=\"Lviv\"/>\n                )}\n                {isEditingCity ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingCity(false)}\n                    onSubmit={handleSubmit}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck type=\"button\" onClick={() => setIsEditingCity(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n                 <StyledErrorMessageCity name=\"city\" component=\"div\"/>\n              </DIV>\n\n              <LogoutBtn />\n            </div>\n          </FormContainer>\n        )}\n        </Formik>\n      </Box>\n      <PetsData/>\n    </MainContainer>\n  );\n};\n","\nimport { UserData } from \"components/UserData/UserData\";\n\nconst User = () => {\n  return (\n    <>\n      <UserData/>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["selectPets","state","pets","getAddPetSuccessfulConnection","isResponseSuccessful","getIsLoading","isLoading","AddIcon","styled","Button","css","Link","NavLink","AddButton","NavLinkWrapper","location","useLocation","isLoggedIn","useSelector","getConnect","useState","isOpenModal","setIsOpenModal","to","from","href","icons","type","onClick","ModalApproveAction","onClose","isOpen","width","height","Overlay","Modal","props","Content","CloseIcon","children","useEffect","onEscapeClose","event","code","window","addEventListener","document","body","style","overflow","removeEventListener","target","currentTarget","undefined","ModalContent","TitleModal","DescrModal","PawPrint","ButtonWrap","ButtonYes","Arrow","ArrowBack","BtnLogout","LogoutBtn","dispatch","useDispatch","toggleModal","logOut","replace","Card","Photo","Description","Label","Breed","LastLabel","Text","LastText","Btn","Icon","ModalContainer","ModalTitle","ModalText","ModalItem","ModalButton","ModalIcon","PetsItem","item","_id","name","imageURL","birthday","breed","comments","deletePet","src","alt","List","PetsList","fetchPets","map","pet","Container","Title","PetsData","showPreviousPage","setShowPreviousPage","AddPetButton","ModalCongrats","MainContainer","Box","TitleCard","FormContainer","Form","ImgContainer","ImgAvatar","SvgIcon","InputAvatar","Field","BtnPhoto","BtnText","BtnCheck","InputContainer","DIV","StyledErrorMessage","ErrorMessage","StyledErrorMessageEmail","StyledErrorMessagePhone","StyledErrorMessageCity","SVGBtn","BtnEdit","ImgCon","Photosvg","schema","yup","shape","min","max","required","email","matches","nullable","phone","city","Camera","CheckBlue","UserData","newUser","selectorNewUser","isNewUser","setIsNewUser","toggleIconPass","setToggleIconPass","user","selectUser","console","log","avatarURL","userImage","setUserImage","avatar","setAvatar","isEditingName","setIsEditingName","isEditingEmail","setIsEditingEmail","isEditingBirthday","setIsEditingBirthday","isEditingPhone","setIsEditingPhone","isEditingCity","setIsEditingCity","handleChangeAvatar","e","file","files","objURL","URL","createObjectURL","formData","FormData","handleSubmitInput","values","append","updateUser","enableReinitialize","initialValues","validationSchema","onSubmit","errors","handleSubmit","touched","handleChange","handleBlur","autoComplete","htmlFor","id","onBlur","onChange","accept","value","component","placeholder"],"sourceRoot":""}