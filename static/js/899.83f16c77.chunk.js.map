{"version":3,"file":"static/js/899.83f16c77.chunk.js","mappings":"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","sources":["components/AddPetForm/validationSchema.js","components/AddPetForm/AddPetFormButtons/BackLink.styled.jsx","components/AddPetForm/AddPetFormButtons/BackLink.js","components/AddPetForm/CategoryStep/CategoryStep.styled.jsx","components/AddPetForm/AddPetFormButtons/NextButton.styled.jsx","components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled.jsx","components/AddPetForm/CategoryStep/CategoryStep.js","components/AddPetForm/AddPetFormButtons/AddPetFormNextButton.js","components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep.styled.jsx","components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep.js","components/AddPetForm/MoreInfoStep/MoreInfoStep.styled.jsx","components/AddPetForm/MoreInfoStep/MoreInfoStep.js","components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.js","pages/AddPet.js"],"sourcesContent":["import { object, string, mixed, number } from 'yup';\n//   Validation schema using Yup\nconst validationSchema = object().shape({\n  category: string().oneOf(['your-pet', 'sell', 'lost-found', 'for-free']),\n  name: string()\n    .required('Name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be at most 16 characters'),\n  date: string()\n    .required('Date is required')\n    .matches(\n      /^\\s*(3[01]|[12][0-9]|0?[1-9])\\.(1[012]|0?[1-9])\\.((?:19|20)\\d{2})\\s*$/,\n      'Date must be in the format DD.MM.YYYY'\n    ),\n  breed: string()\n    .min(2, 'Breed must be at least 2 characters')\n    .max(16, 'Breed must be at most 16 characters')\n    .required('Breed is required'),\n  avatar: mixed()\n    .required('File is required')\n    //the test method from Yup to define a custom validation rule for the avatar field. The test checks if the value exists  (a file is selected) and if its size is less than or equal to 3MB (3 * 1024 * 1024 bytes). If the test fails, it will display the error message \"File size must not exceed 3MB\".\n    .test(\n      'fileSize',\n      'File size must not exceed 3MB',\n      value => value.size <= 3 * 1024 * 1024\n    ),\n  sex: string().when('category', {\n    is: value => ['sell', 'lost-found', 'for-free'].includes(value),\n    then: string()\n      .required('Sex is required')\n      .oneOf(['male', 'female'], 'Please select either \"male\" or \"female\"'),\n  }),\n\n  location: string()\n    .matches(\n      /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/,\n      'Invalid location format. Please use city names only.'\n    )\n    .min(2, 'City name must be at least 2 characters')\n    .required('Location is required'),\n  price: number()\n    .min(0, 'Price must be a positive number')\n    .integer('Price must be an integer')\n    .required('Price is required'),\n  comments: string()\n    .min(8, 'Comments must be at least 8 characters')\n    .max(120, 'Comments must be at most 120 characters')\n    .required('Comments are required'),\n\n  title: string()\n    .min(2, 'Title must be at least 2 characters')\n    .required('Title is required'),\n});\n\nexport default validationSchema;\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// Define a reusable CSS block using the css function\nexport const BackButton = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  color: var(--cl-blue-link);\n  background-color: transparent;\n  border: none;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  height: 22px;\n`;\n\nexport const StyledLink = styled(Link)`\n  ${BackButton}\n`;\n\nexport const AddPetBackButton = styled.button`\n  ${BackButton}\n`;\n","import { StyledLink, AddPetBackButton } from './BackLink.styled';\nimport icons from 'images/icons.svg';\n\nconst BackLink = ({ isLink, buttonText, to, handleClick, type }) => {\n  if (isLink) {\n    return (\n      <StyledLink to={to} onClick={handleClick}>\n        <svg width={24} height={24}>\n          <use href={icons + '#arrow-left'} />\n        </svg>\n        {buttonText}\n      </StyledLink>\n    );\n  } else {\n    return (\n      <AddPetBackButton onClick={handleClick} type={type}>\n        <svg width={24} height={24}>\n          <use href={icons + '#arrow-left'} />\n        </svg>\n        {buttonText}\n      </AddPetBackButton>\n    );\n  }\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const CategoryStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n  margin-bottom: 91px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 137px;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const CategoryStepLabel = styled.label`\n  width: fit-content;\n  position: relative;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 40px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  letter-spacing: 0.04em;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-blue-light);\n\n  transition: background-color var(--animat), color var(--animat);\n\n  &:hover,\n  &:focus,\n  ${RadioButton}:checked + & {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const NextButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  background-color: var(--cl-blue-link);\n  min-width: 248px;\n  padding: 9px 0;\n  border: none;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  color: var(--cl-background);\n  border-radius: 40px;\n\n  cursor: pointer;\n\n  &:disabled {\n    color: var(--cl-gray);\n    background-color: var(--cl-blue-light);\n    pointer-events: none;\n  }\n`;\n\nexport const PawIcon = styled.svg`\n  fill: var(--cl-background);\n`;\n","import styled from 'styled-components';\nexport const AddPetFormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n","import { useRef, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BackLink from '../AddPetFormButtons/BackLink';\nimport {\n  CategoryStepContainer,\n  CategoryStepLabel,\n  RadioButton,\n} from './CategoryStep.styled';\nimport icons from '../../../images/icons.svg';\nimport {\n  NextButton,\n  PawIcon,\n} from 'components/AddPetForm/AddPetFormButtons/NextButton.styled';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\n\nconst CategoryStep = ({ onNext, onSelectCategory, selectedCategory }) => {\n  const location = useLocation();\n  const locRef = useRef(location.state?.from ?? '/main'); // for Back button\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    !selectedCategory ? setIsDisabled(true) : setIsDisabled(false);\n  }, [selectedCategory]);\n\n  const handleCategoryChange = event => {\n    const selectedCategory = event.target.value;\n    onSelectCategory(selectedCategory);\n  };\n\n  return (\n    <>\n      {/* Radio buttons for selecting a category */}\n      <CategoryStepContainer>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"your-pet\"\n          id=\"your-pet\"\n          checked={selectedCategory === 'your-pet'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"your-pet\">\n          {/* Initial selection is \"your pet\" */}\n          your pet\n        </CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"sell\"\n          id=\"sell\"\n          checked={selectedCategory === 'sell'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"sell\">sell</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"lost-found\"\n          id=\"lost-found\"\n          checked={selectedCategory === 'lost-found'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"lost-found\">lost/found</CategoryStepLabel>\n        <RadioButton\n          type=\"radio\"\n          name=\"category\"\n          value=\"for-free\"\n          id=\"for-free\"\n          checked={selectedCategory === 'for-free'}\n          onChange={handleCategoryChange}\n        />\n        <CategoryStepLabel htmlFor=\"for-free\">in good hands</CategoryStepLabel>\n      </CategoryStepContainer>\n      <AddPetFormButtonWrapper>\n        <BackLink to={locRef.current} buttonText=\"Cancel\" isLink={true} />\n        {/* Cancel button, must be changed to BackLink */}\n        <NextButton type=\"button\" onClick={onNext} disabled={isDisabled}>\n          {/* Proceed to the next step */}\n          Next\n          <PawIcon width={24} height={24}>\n            <use href={icons + '#pawprint'} />\n          </PawIcon>\n        </NextButton>\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default CategoryStep;\n","import { NextButton, PawIcon } from './NextButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst AddPetFormNextButton = ({ buttonText, type, onClick, disabled }) => {\n  return (\n    <NextButton type={type} onClick={onClick} disabled={disabled}>\n      {buttonText}\n      <PawIcon width={24} height={24}>\n        <use href={icons + '#pawprint'} />\n      </PawIcon>\n    </NextButton>\n  );\n};\n\nexport default AddPetFormNextButton;\n","import { Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const PersonalDetailsStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 44px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const PersonalDetailsField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const PersonalDetailsStepLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: var(--cl-black);\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: calc(26 / 20);\n  }\n`;\n\nexport const PersonalDetailsStepInput = styled(Field)`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  border-radius: 40px;\n  padding: 10px 16px;\n  color: var(--cl-gray);\n\n  border: 1px solid\n    ${props => (props.errors ? 'var(--cl-red)' : 'var(--cl-blue-link)')};\n  outline: var(--cl-blue-link);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorMessageContainer = styled(ErrorMessage)`\n  color: var(--cl-red);\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n`;\n","import { useFormikContext } from 'formik';\nimport { useState, useEffect, useCallback } from 'react';\nimport AddPetFormNextButton from 'components/AddPetForm/AddPetFormButtons/AddPetFormNextButton';\nimport BackLink from '../AddPetFormButtons/BackLink';\nimport {\n  ErrorMessageContainer,\n  PersonalDetailsField,\n  PersonalDetailsStepContainer,\n  PersonalDetailsStepInput,\n  PersonalDetailsStepLabel,\n} from './PersonalDetailsStep.styled';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\n\nconst PersonalDetailsStep = ({\n  onBack,\n  onNext,\n  selectedCategory,\n  setFormValues,\n}) => {\n  const { values, setTouched, touched, errors } = useFormikContext();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Function to validate form fields. useCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    // Validate title field if category is 'sell', 'lost-found' or 'for-free'\n    if (selectedCategory !== 'your-pet') {\n      if (!values.title) {\n        formErrors.title = 'Title is required';\n      }\n    }\n\n    // Validate name field\n    if (!values.name) {\n      formErrors.name = 'Name is required';\n    }\n\n    // Validate date field\n    if (!values.date) {\n      formErrors.date = 'Date of birth is required';\n    }\n\n    // Validate breed field\n    if (!values.breed) {\n      formErrors.breed = 'Breed is required';\n    } else if (values.breed.length < 2) {\n      formErrors.breed = 'Breed must be at least 2 characters';\n    } else if (values.breed.length > 16) {\n      formErrors.breed = 'Breed must be at most 16 characters';\n    }\n\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Handle next button click\n  const handleNextClick = () => {\n    // setTouched is called to mark all form fields as touched\n    setTouched({\n      title: true,\n      name: true,\n      date: true,\n      breed: true,\n    });\n\n    const formErrors = validateFields();\n\n    if (Object.keys(formErrors).length === 0) {\n      setFormValues(prevState => ({\n        ...prevState,\n        title: values.title,\n        name: values.name,\n        date: values.date,\n        breed: values.breed,\n      }));\n      onNext();\n    }\n  };\n\n  // Update disabled state based on form field validation\n  useEffect(() => {\n    const formErrors = validateFields();\n    setIsDisabled(Object.keys(formErrors).length > 0);\n  }, [values, selectedCategory, validateFields]); //  When any of these values change, the effect will run again to update the disabled state\n\n  return (\n    <>\n      <PersonalDetailsStepContainer>\n        {/* Field \"title\" is only for the \"sell\" and \"lost\" categories */}\n        {selectedCategory !== 'your-pet' && (\n          <PersonalDetailsField>\n            <PersonalDetailsStepLabel>\n              Title of add\n              <PersonalDetailsStepInput\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Type title\"\n                errors={touched.title && errors.title}\n              />\n            </PersonalDetailsStepLabel>\n\n            <ErrorMessageContainer name=\"title\" component=\"div\" />\n          </PersonalDetailsField>\n        )}\n\n        {/* Input field for capturing the name of the pet */}\n        <PersonalDetailsField>\n          <PersonalDetailsStepLabel>\n            Pet’s name\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              errors={touched.name && errors.name}\n            />\n          </PersonalDetailsStepLabel>\n          <ErrorMessageContainer name=\"name\" component=\"div\" />\n        </PersonalDetailsField>\n        {/* Input field for capturing the date of birth of the pet */}\n        <PersonalDetailsField>\n          <PersonalDetailsStepLabel>\n            Date of birth\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"date\"\n              placeholder=\"Type date of birth\"\n              errors={touched.date && errors.date}\n            />\n          </PersonalDetailsStepLabel>\n          <ErrorMessageContainer name=\"date\" component=\"div\" />\n        </PersonalDetailsField>\n        {/* Input field for capturing the breed of the pet */}\n        <PersonalDetailsField>\n          <PersonalDetailsStepLabel>\n            Breed\n            <PersonalDetailsStepInput\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              errors={touched.breed && errors.breed}\n            />\n          </PersonalDetailsStepLabel>\n          <ErrorMessageContainer name=\"breed\" component=\"div\" />\n        </PersonalDetailsField>\n      </PersonalDetailsStepContainer>\n      <AddPetFormButtonWrapper>\n        {/* Button to navigate to the previous step */}\n        <BackLink\n          type=\"button\"\n          buttonText=\"Back\"\n          handleClick={onBack}\n          isLink={false}\n        />\n        {/* Button to navigate to the next step */}\n        <AddPetFormNextButton\n          type=\"button\"\n          onClick={handleNextClick}\n          disabled={isDisabled}\n          buttonText=\"Next\"\n        />\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default PersonalDetailsStep;\n","import { Field, ErrorMessage } from 'formik';\nimport styled, { css } from 'styled-components';\n\nexport const MoreInfoStepContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 60px;\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet'\n        ? 'flex-direction: row; column-gap: 45px'\n        : ''};\n  }\n`;\n\nexport const SexAvatarFieldWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n\n  ${({ selectedCategory }) =>\n    selectedCategory !== 'your-pet' ? 'flex-direction: column;' : ''}\n\n  @media screen and (min-width: 768px) {\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet' ? 'row-gap: 45px;' : ''};\n  }\n`;\n\nexport const LocationPriceCommentFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const SexFieldTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  margin-bottom: 8px;\n  color: var(--cl-black);\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(26 / 20);\n  }\n`;\n\nexport const SexRadioButtonsWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const SexLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  color: var(--cl-gray);\n\n  transition: color var(--animat);\n\n  &:hover,\n  &:focus,\n  ${RadioButton}:checked + & {\n    color: var(--cl-green);\n  }\n`;\n\nexport const AvatarLabel = styled.label`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: var(--cl-black);\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(26 / 20);\n\n    ${({ selectedCategory }) =>\n      selectedCategory !== 'your-pet'\n        ? 'flex-direction: column;column-gap: 12px'\n        : ''}\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  object-position: center;\n  object-fit: cover;\n`;\n\nexport const AvatarField = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MoreInfoStepLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: var(--cl-black);\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    font-size: 20px;\n    line-height: calc(26 / 20);\n  }\n`;\n\nexport const Input = css`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  border-radius: 40px;\n  padding: 10px 16px;\n  color: var(--cl-gray);\n\n  border: 1px solid\n    ${props => (props.errors ? 'var(--cl-red)' : 'var(--cl-blue-link)')};\n  outline: var(--cl-blue-link);\n  outline: var(--cl-blue-link);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const MoreInfoStepInput = styled(Field)`\n  ${Input}\n`;\n\nexport const MoreInfoStepTextArea = styled(Field)`\n  ${Input}\n  resize: none;\n  height: 92px;\n\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    height: 79px;\n\n    ${({ category }) => (category === 'lost-found' ? 'height: 182px' : '')}\n  }\n`;\n\nexport const ErrorMessageContainer = styled(ErrorMessage)`\n  color: var(--cl-red);\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n`;\n","import { useState, useCallback, useEffect } from 'react';\nimport { ErrorMessage, useFormikContext } from 'formik';\nimport icons from '../../../images/icons.svg';\nimport { AddPetFormButtonWrapper } from 'components/AddPetForm/AddPetFormButtons/AddPetFormButtonWrapper.styled';\nimport {\n  AvatarField,\n  AvatarLabel,\n  AvatarWrapper,\n  ErrorMessageContainer,\n  LocationPriceCommentFieldWrapper,\n  MoreInfoStepContainer,\n  MoreInfoStepInput,\n  MoreInfoStepLabel,\n  MoreInfoStepTextArea,\n  RadioButton,\n  SexAvatarFieldWrapper,\n  SexFieldTitle,\n  SexLabel,\n  SexRadioButtonsWrapper,\n} from './MoreInfoStep.styled';\nimport BackLink from 'components/AddPetForm/AddPetFormButtons/BackLink';\nimport AddPetFormNextButton from 'components/AddPetForm/AddPetFormButtons/AddPetFormNextButton';\n\nconst MoreInfoStep = ({\n  onBack,\n  selectedCategory,\n  setFormValues,\n  handleSubmit,\n}) => {\n  const { values, setTouched, touched, errors, setFieldValue } =\n    useFormikContext();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const handleChange = event => {\n    setFieldValue('avatar', event.target.files[0]);\n  };\n\n  // Function to validate form fields. useCallback is used to memoize the validateFields function\n  const validateFields = useCallback(() => {\n    let formErrors = {};\n\n    if (selectedCategory !== 'your-pet') {\n      if (!values.sex) {\n        formErrors.sex = 'Please select a sex';\n      }\n      if (!values.location) {\n        formErrors.location = 'Location is required';\n      }\n    }\n\n    if (selectedCategory === 'sell') {\n      if (!values.price) {\n        formErrors.price = 'Price is required';\n      }\n    }\n\n    if (!values.avatar) {\n      formErrors.avatar = 'Avatar is required';\n    }\n\n    // Validate comments field\n    if (!values.comments) {\n      formErrors.comments = 'Comments are required';\n    } else if (values.comments.length < 8) {\n      formErrors.comments = 'Comments must be at least 8 characters';\n    } else if (values.comments.length > 120) {\n      formErrors.comments = 'Comments must be at most 120 characters';\n    }\n    return formErrors;\n  }, [selectedCategory, values]);\n\n  // Handle next button click\n  const handleSubmitClick = () => {\n    setTouched({\n      sex: true,\n      location: true,\n      price: true,\n      avatar: true,\n      comments: true,\n    });\n\n    const formErrors = validateFields();\n\n    if (Object.keys(formErrors).length === 0) {\n      setFormValues(prevState => ({\n        ...prevState,\n        sex: values.sex,\n        location: values.location,\n        price: values.price,\n        avatar: values.avatar,\n        comments: values.comments,\n      }));\n      handleSubmit(values);\n    }\n  };\n\n  // Update disabled state based on form field validation\n  useEffect(() => {\n    const formErrors = validateFields();\n    setIsDisabled(Object.keys(formErrors).length > 0);\n  }, [values, selectedCategory, validateFields]); //  When any of these values change, the effect will run again to update the disabled state\n\n  return (\n    <>\n      <MoreInfoStepContainer selectedCategory={selectedCategory}>\n        <SexAvatarFieldWrapper selectedCategory={selectedCategory}>\n          {/* Fields are for all categories except  the category 'your-pet' */}\n          {selectedCategory !== 'your-pet' && (\n            <div>\n              <SexFieldTitle>The sex</SexFieldTitle>\n              <SexRadioButtonsWrapper>\n                <RadioButton\n                  id=\"female\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"female\"\n                  checked={values.sex === 'female'}\n                />\n                <SexLabel htmlFor=\"female\">\n                  <svg width={24} height={24}>\n                    <use href={icons + '#female'} />\n                  </svg>\n                  Female\n                </SexLabel>\n                <RadioButton\n                  id=\"male\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"male\"\n                  checked={values.sex === 'male'}\n                />\n                <SexLabel htmlFor=\"male\">\n                  <svg width={24} height={24}>\n                    <use href={icons + '#male'} />\n                  </svg>\n                  Male\n                </SexLabel>\n              </SexRadioButtonsWrapper>\n              <ErrorMessage\n                name=\"sex\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n            </div>\n          )}\n          <AvatarLabel selectedCategory={selectedCategory}>\n            Load the pet’s image:\n            <AvatarWrapper>\n              {!values.avatar ? (\n                <svg width={182} height={182}>\n                  <use href={icons + '#defaultAvatar'} />\n                </svg>\n              ) : (\n                <img\n                  src={URL.createObjectURL(values.avatar)}\n                  alt=\"Pet's avatar\"\n                />\n              )}\n              <AvatarField\n                accept=\"image/*\"\n                name=\"avatar\"\n                type=\"file\"\n                onChange={handleChange}\n                errors={touched.avatar && errors.avatar}\n              />\n            </AvatarWrapper>\n          </AvatarLabel>\n          <ErrorMessageContainer name=\"avatar\" component=\"div\" />\n        </SexAvatarFieldWrapper>\n        <LocationPriceCommentFieldWrapper>\n          {selectedCategory !== 'your-pet' && (\n            <div>\n              <MoreInfoStepLabel>\n                Location\n                <MoreInfoStepInput\n                  type=\"text\"\n                  name=\"location\"\n                  placeholder=\"Type of location\"\n                  errors={touched.location && errors.location}\n                />\n              </MoreInfoStepLabel>\n              <ErrorMessageContainer name=\"location\" component=\"div\" />\n            </div>\n          )}\n\n          {/* Field \"price\" is only for the \"sell\" category */}\n          {selectedCategory === 'sell' && (\n            <div>\n              <MoreInfoStepLabel>\n                Price\n                <MoreInfoStepInput\n                  type=\"number\"\n                  min=\"0\"\n                  name=\"price\"\n                  placeholder=\"Type of price\"\n                  errors={touched.price && errors.price}\n                />\n              </MoreInfoStepLabel>\n              <ErrorMessageContainer name=\"price\" component=\"div\" />\n            </div>\n          )}\n\n          {/* Field \"comments\" for additional comments */}\n          <div>\n            <MoreInfoStepLabel>\n              Comments\n              <MoreInfoStepTextArea\n                name=\"comments\"\n                placeholder=\"Type breed\"\n                component=\"textarea\"\n                category={selectedCategory}\n                errors={touched.comments && errors.comments}\n              ></MoreInfoStepTextArea>\n            </MoreInfoStepLabel>\n            <ErrorMessageContainer\n              name=\"comments\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n        </LocationPriceCommentFieldWrapper>\n      </MoreInfoStepContainer>\n      <AddPetFormButtonWrapper>\n        {/* Button to navigate to the previous step */}\n        {/* Button to navigate to the previous step */}\n        <BackLink\n          type=\"button\"\n          buttonText=\"Back\"\n          handleClick={onBack}\n          isLink={false}\n        />\n        {/* Button to submit the form */}\n        <AddPetFormNextButton\n          type=\"submit\"\n          onClick={handleSubmitClick}\n          disabled={isDisabled}\n          buttonText=\"Done\"\n        />\n      </AddPetFormButtonWrapper>\n    </>\n  );\n};\n\nexport default MoreInfoStep;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n  width: 100%;\n  min-height: 496px;\n  padding: 20px 8px 17px;\n  background-color: var(--cl-almost-white);\n  box-shadow: var(--shadow-default);\n  border-radius: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: fit-content;\n    min-height: 542px;\n    padding: 20px 32px;\n\n    ${({ step }) => (step === 1 || step === 2 ? 'width: 458px' : '')}\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(27 / 20);\n  padding-left: 20px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: calc(38 / 28);\n    padding-left: 32px;\n  }\n`;\n\nexport const Stepper = styled.ul`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: calc(14 / 10);\n  gap: 11px;\n  margin-bottom: 24px;\n  color: var(--cl-gray);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(26 / 16);\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StepperItem = styled.li`\n  position: relative;\n  padding-bottom: 20px;\n  flex-basis: calc((100% - 22px) / 3);\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 100%;\n    height: 8px;\n\n    background-color: var(--cl-blue-light);\n    border-radius: 8px;\n  }\n\n  &.active {\n    color: var(--cl-blue-link); /* Style for the active step */\n  }\n\n  &.active::after {\n    background-color: var(--cl-blue-link);\n  }\n\n  &.completed {\n    color: var(--cl-green); /* Style for the completed step */\n  }\n\n  &.completed::after {\n    background-color: var(--cl-green);\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { Formik, Form } from 'formik';\nimport validationSchema from './validationSchema';\nimport CategoryStep from 'components/AddPetForm/CategoryStep/CategoryStep';\nimport PersonalDetailsStep from 'components/AddPetForm/PersonalDetailsStep/PersonalDetailsStep';\nimport MoreInfoStep from 'components/AddPetForm/MoreInfoStep/MoreInfoStep';\nimport {\n  FormContainer,\n  FormTitle,\n  Stepper,\n  StepperItem,\n} from './AddPetForm.styled';\n\nconst AddPetForm = () => {\n  const [step, setStep] = useState(1);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [completedSteps, setCompletedSteps] = useState([]);\n  const formikRef = useRef(null);\n\n  const [formValues, setFormValues] = useState({\n    category: selectedCategory,\n    name: '',\n    date: '',\n    breed: '',\n    avatar: '',\n    sex: '',\n    location: '',\n    price: '',\n    comments: '',\n    title: '',\n  });\n  const steps = ['Choose Option', 'Personal Details', 'More Info'];\n\n  const stepTitles = {\n    1: 'Add pet',\n    2: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add lost or found pet',\n      'for-free': 'Add pet for adoption',\n    },\n    3: {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add lost or found pet',\n      'for-free': 'Add pet for adoption',\n    },\n  };\n\n  // Function to handle category selection\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setFormValues(prevFormValues => ({\n      ...prevFormValues,\n      category: category,\n    }));\n  };\n\n  const currentTitle =\n    typeof stepTitles[step] === 'string' ? stepTitles[step] : ''; // code checks if stepTitles[step] is a string, and if it is, assigns it to currentTitle.  Otherwise, it assigns an empty string.\n\n  const dynamicTitle =\n    step > 1\n      ? stepTitles[step][selectedCategory] || currentTitle\n      : currentTitle;\n\n  const handleNext = () => {\n    setCompletedSteps([...completedSteps, step]);\n    setStep(prevStep => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n    const { resetForm } = formikRef.current;\n\n    formData.append('categories', formValues.category);\n    formData.append('name', values.name);\n    formData.append('birthday', values.date);\n    formData.append('breed', values.breed);\n    formData.append('imageURL', values.avatar);\n    formData.append('comments', values.comments);\n\n    if (formValues.category === 'your-pet') {\n      for (let pair of formData.entries()) {\n        console.log(pair[0] + ': ' + pair[1]);\n      }\n\n      // dispatch(addMyPet({category: 'my ads', formData}))\n      resetForm();\n      return;\n    }\n\n    formData.append('title', values.title);\n    formData.append('sex', values.sex);\n    formData.append('place', values.location);\n\n    if (formValues.category === 'lost-found') {\n      for (let pair of formData.entries()) {\n        console.log(pair[0] + ': ' + pair[1]);\n      }\n\n      // dispatch(addNotice({ category: 'lost/found', formData }));\n      resetForm();\n      return;\n    }\n\n    if (formValues.category === 'for-free') {\n      for (let pair of formData.entries()) {\n        console.log(pair[0] + ': ' + pair[1]);\n      }\n\n      // dispatch(addNotice({ category: 'in good hands', formData }));\n      resetForm();\n      return;\n    }\n\n    formData.append('price', values.price);\n\n    if (formValues.category === 'sell') {\n      for (let pair of formData.entries()) {\n        console.log(pair[0] + ': ' + pair[1]);\n      }\n\n      // dispatch(addNotice({ category: 'sell', formData }));\n      resetForm();\n      return;\n    }\n  };\n\n  const renderStepContent = step => {\n    switch (step) {\n      case 1:\n        return (\n          <CategoryStep\n            onNext={handleNext}\n            onSelectCategory={handleCategorySelect}\n            selectedCategory={selectedCategory}\n          />\n        );\n      case 2:\n        return (\n          <PersonalDetailsStep\n            onBack={handleBack}\n            onNext={handleNext}\n            selectedCategory={selectedCategory}\n            setFormValues={setFormValues}\n          />\n        );\n      case 3:\n        return (\n          <MoreInfoStep\n            onBack={handleBack}\n            selectedCategory={selectedCategory}\n            setFormValues={setFormValues}\n            handleSubmit={handleSubmit}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <FormContainer step={step}>\n      <FormTitle>{dynamicTitle}</FormTitle>\n      <Stepper>\n        {steps.map((name, index) => (\n          <StepperItem\n            key={index}\n            className={\n              step === index + 1\n                ? 'active'\n                : completedSteps.includes(index + 1)\n                ? 'completed'\n                : ''\n            }\n          >\n            {name}\n          </StepperItem>\n        ))}\n      </Stepper>\n      <Formik\n        initialValues={formValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        innerRef={formikRef}\n      >\n        {({ values }) => <Form>{renderStepContent(step)}</Form>}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default AddPetForm;\n","// Компонент рендериться на маршрут /add-pet\n\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <div>\n      <AddPetForm />\n    </div>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["object","shape","category","string","oneOf","name","required","min","max","date","matches","breed","avatar","mixed","test","value","size","sex","when","is","includes","then","location","price","number","integer","comments","title","BackButton","css","StyledLink","styled","Link","AddPetBackButton","isLink","buttonText","to","handleClick","type","onClick","width","height","href","icons","CategoryStepContainer","RadioButton","Field","CategoryStepLabel","NextButton","PawIcon","AddPetFormButtonWrapper","onNext","onSelectCategory","selectedCategory","useLocation","locRef","useRef","state","from","useState","isDisabled","setIsDisabled","useEffect","handleCategoryChange","event","target","id","checked","onChange","htmlFor","current","disabled","PersonalDetailsStepContainer","PersonalDetailsField","PersonalDetailsStepLabel","PersonalDetailsStepInput","props","errors","ErrorMessageContainer","ErrorMessage","onBack","setFormValues","useFormikContext","values","setTouched","touched","validateFields","useCallback","formErrors","length","Object","keys","placeholder","component","prevState","MoreInfoStepContainer","SexAvatarFieldWrapper","LocationPriceCommentFieldWrapper","SexFieldTitle","SexRadioButtonsWrapper","SexLabel","AvatarLabel","AvatarWrapper","AvatarField","MoreInfoStepLabel","Input","MoreInfoStepInput","MoreInfoStepTextArea","handleSubmit","setFieldValue","className","src","URL","createObjectURL","alt","accept","files","FormContainer","step","FormTitle","Stepper","StepperItem","setStep","setSelectedCategory","completedSteps","setCompletedSteps","formikRef","formValues","stepTitles","sell","handleCategorySelect","prevFormValues","currentTitle","dynamicTitle","handleNext","prevStep","handleBack","formData","FormData","resetForm","append","entries","pair","console","log","renderStepContent","map","index","initialValues","validationSchema","onSubmit","innerRef"],"sourceRoot":""}