{"version":3,"file":"static/js/583.9574a308.chunk.js","mappings":"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","sources":["Redux/auth/selector.js","components/ModalApproveAction/ModalApproveAction.styled.jsx","components/ModalApproveAction/ModalApproveAction.js","components/Logout/Logout.styled.jsx","components/Logout/Logout.js","components/UserData/UserData.styled.jsx","components/UserData/UserData.js","pages/User.js"],"sourcesContent":["export const selectUser = state => state.auth.user;\n\nexport const getConnect = state => state.auth.isConnect;","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(43, 43, 43, 0.6);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: 280px;\n  \n  background-color: var(--cl-almost-white);\n  box-shadow: var(--shadow-default);\n  border-radius: 20px;\n\n  @media (min-width: 768px) {\n    width: ${props => props.report ? \"681px\" : \"608px\"};\n    border-radius: 40px;\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n`\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  padding: 0;\n\n  background-color: var(--cl-almost-white);\n  color: var(--cl-blue-link);\n  border: none;\n\n  cursor: pointer;\n\n  transition: transform var(--animat);\n\n  @media (min-width: 768px) {\n    top: 29px;\n    right: 29px;\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    transform: scale(1.2);\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n`;\n","// Перевикористовуємий компонент, що рендерить у модальному вікні питання, отримане у вигляді childrens,\n// та 2 функціональні кнопки. Модальне вікно повинно закриватись по кліку на кнопку Cancel,\n// по кліку на кнопку закриття, клік по бекдропу, а також клік по Escape.\n// По кліку на Yes необхідно викликати функцію, передану в ModalApproveAction у вигляді props на випадок згоди користувача\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Button, CloseIcon, Content, Modal, Overlay } from './ModalApproveAction.styled';\nimport icons from 'images/icons.svg';\n\nexport const ModalApproveAction = ({ children, onClose}) => {\n  //   пропс onClose це функція toggleModal,\n  //   яку потрібно передати компоненту ModalApproveAction\n  //   toggleModal - змінює стейт isOpen\n\n  const onBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n    document.body.style.overflow= \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"visible\";\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [onClose]);\n\n  return (\n    <>\n      <Overlay onClick={onBackdropClose}>\n        <Modal >\n          <Button type=\"button\" apia-label=\"close\" onClick={onClose}>\n            <CloseIcon>\n              <use href={icons + '#cross-small'} />\n            </CloseIcon>\n          </Button>\n          <Content>{children}</Content>\n        </Modal>\n      </Overlay>\n    </>\n  );\n};\n\nModalApproveAction.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node, \n};\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 77px 0 60px;\n\n  font-style: normal;\n  letter-spacing: 0.04em;\n  color: var(--cl-black);\n\n  @media (min-width: 768px) {\n    padding: 108px 0 108px;\n  }\n`;\n\nexport const TitleModal = styled.h4`\n  font-size: 24px;\n  line-height: 33px;\n  font-weight: 500;\n\n  padding-bottom: 48px;\n\n  @media (min-width: 768px) {\n    font-weight: 700;\n    font-size: 36px;\n    line-height: 49px;\n    padding-bottom: 48px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 17px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  width: 256px;\n  height: 40px;\n  padding: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background: transparent;\n\n  @media (min-width: 768px) {\n    width: 129px;\n  }\n\n  transition: background var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: var(--cl-background);\n    background: var(--gr-blue);\n    border: none;\n    transition: background var(--animat) 1000ms;\n  }\n`;\n\nexport const ButtonYes = styled(Button)`\n  border: none;\n  color: var(--cl-background);\n  background: var(--cl-blue-link);\n\n  cursor: pointer;\n\n  transition: background var(--animat);\n\n  &:hover,\n  &:active,\n  &:focus {\n    background: var(--gr-blue);\n    transition: background var(--animat) 1000ms;\n  }\n`;\n\nexport const Arrow = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\nexport const ArrowBack = styled.svg`\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const BtnLogout = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n\n  width: 98px;\n  height: 30px;\n\n  font-weight: 500;\n  font-family: 'Manrope';\n  font-size: 16px;\n\n  border: none;\n  background-color: transparent;\n`;\n","// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\n\nimport { ModalApproveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Arrow,\n  Button,\n  ButtonWrap,\n  ModalContent,\n  TitleModal,\n  BtnLogout,\n  //Ірина\n  ArrowBack,\n  \n  //Олексій\n  ButtonYes,\n} from './Logout.styled';\n\n//Олексій\n// } from './UserPage.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\n// import { ModalCongrats } from 'components/ModalCongrats/ModalCongrats';\n\nexport const LogoutBtn = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalApproveAction для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    console.log('Передаємо екшн');\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalApproveAction onClose={toggleModal} report>\n          <ModalContent>\n            <TitleModal>Already leaving?</TitleModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <ButtonYes type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Arrow>\n                  <use href={icons + '#logout'} />\n                </Arrow>\n              </ButtonYes>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalApproveAction>\n      )}\n\n      <BtnLogout type=\"button\" onClick={toggleModal}>\n      <ArrowBack><use href={icons + '#logout'}/></ArrowBack>\n        LogOut\n      </BtnLogout>\n\n      {/* <ModalCongrats /> */}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const TitleCard = styled.h2`\nfont-weight: 500;\nfont-size: 20px;\nline-height: 27px;\nmargin-bottom: 18px;\n@media screen and (min-width: 480px) {\n  margin-bottom: 24px;\n  font-weight: 500;\nfont-size: 28px;\nline-height: 38px;\n}\n\n\n`\n\n\n\nexport const FormContainer = styled(Form)`\n  position: relative;\n  width: 280px;\n  height: 517px;\n  padding: 20px 8px 25px;\n\n  background-color: var(--cl-almost-white);\n\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n\n  // display: flex;\n  // gap: 12px;\n  // align-items: center;\n  // justify-content: space-between;\n\n  //   font-weight: 500;\n  //   font-family: 'Manrope';\n  // font-size: 16px;\n  // border: none;\n  // background-color: transparent;\n\n    @media screen and (min-width: 480px) {\n      width: 704px;\n      height: 268px;\n      padding: 20px 20px;\n      display: flex;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      gap: 71px;\n\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 395px;\n      height: 520px;\n      padding: 20px 24px 16px;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      gap: 25px;\n    }\n`;\n\nexport const ImgContainer = styled.div`\n  width: 182px;\n  height: 182px;\n  margin-bottom: 14px;\n\n  border-radius: 40px;\n`;\nexport const ImgAvatar = styled.img`\n  border-radius: 40px;\n`;\nexport const SVG = styled.svg`\n  margin-right: 8px;\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n\n\nexport const InputAvatar = styled(Field)`\n  width: 96px;\n  visibility: hidden;\n`;\nexport const BtnPhoto = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 96px;\n  height: 28px;\n  border: none;\n  background-color: transparent;\n`;\n\n\nexport const BtnText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 22px;\n`;\n\nexport const BtnCheck = styled.button`\n  position: absolute;\n  right: 15px;\n  // top: 50px;\n  // width: 24px;\n  // height: 24px;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 480px) {\n    position: absolute;\n    right: 0px;\n    left: 0px;\n  }\n  @media screen and (min-width: 768px) {\n    position: absolute;\n  \n   left: 315px;\n  }\n\n  \n\n\n`;\n\n// export const InputList = styled.div`\n// &: first-child{\n//   margin-top: 21px;\n// }\n\n// &: last-child{\n//   margin-bottom: 21px;\n// `\n\n// export const Input = styled(Field)`\n//   width: 130px;\n//   border: none;\n//   background-color: transparent;\n// `;\nexport const InputContainer = styled(Field)`\n  padding: 6px 12px;\n  width: 190px;\n  height: 28px;\n\n  background-color: var(--cl-almost-white);\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  cursor: pointer;\n\n  font-weight: 400;\n  font-size: 12px;\n  &: focus {\n    outline: none;\n  }\n  \n  @media screen and (min-width: 480px) {\n    padding: 6px 12px;\n    width: 255px;\n    height: 32px;\n  }\n\n\n\n`;\n\nexport const Label = styled.label`\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n\n\n  @media screen and (min-width: 480px) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n`;\n\nexport const DIV = styled.div`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n  margin: 12px auto;\n\n  @media screen and (min-width: 480px) {\n    margin: 8px auto;\n    width: 355px;\n    height: 32px;\n  }\n  \n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  right: 85px;\n\n  bottom: 220px;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n  color: #da1414;\n`;\n\n\nexport const SVGBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-green);\n  fill: transparent;\n`;\n\nexport const BtnEdit = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--cl-blue-link);\n  fill: var(--cl-blue-link);\n`;\n\nexport const ImgCon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Photosvg = styled.svg`\n  width: 182px;\n  height: 182px;\n\n  // stroke: var(--cl-blue-link);\n  fill: transparent;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'Redux/auth/selector';\nimport { currentUser, updateUser } from 'Redux/auth/operation';\n\nimport icons from 'images/icons.svg';\nimport { LogoutBtn } from 'components/Logout/Logout';\n\nimport {\n  TitleCard,\n  FormContainer,\n  BtnCheck,\n  InputContainer,\n  Label,\n  InputAvatar,\n  BtnText,\n  BtnPhoto,\n  ImgContainer,\n  SVG,\n  SVGBtn,\n  DIV,\n  ImgCon,\n  Photosvg,\n  ImgAvatar,\n  BtnEdit,\n} from './UserData.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().max(16, 'Length must be less then 15').required(),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .email('Invalid e-mail')\n    .required(),\n  birthday: yup.date().nullable(),\n  phone: yup\n    .string()\n    .matches(/^\\+380\\d{9}$/, 'Enter your phone number in format +380')\n    .nullable(),\n  city: yup.string().max(16, 'Length must be less then 16').nullable(),\n});\n\n\nconst Camera = () => {\n  return (\n    <BtnPhoto>\n      <SVG>\n        <use href={icons + '#camera'} />\n      </SVG>\n      <BtnText>Edit photo</BtnText>\n    </BtnPhoto>\n  );\n};\n\nconst CheckBlue = () => {\n  return (\n    <BtnPhoto>\n      <SVG>\n        <use href={icons + '#check'} />\n      </SVG>\n      <BtnText>Confirm</BtnText>\n    </BtnPhoto>\n  );\n};\n\nexport const UserData = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n  const [toggleIconPass, setToggleIconPass] = useState(Camera);\n\n  const [imgUrl, setImgUrl] = useState('');\n\n  const [userName, setUserName] = useState(user.name);\n  const [userEmail, setUserEmail] = useState(user.email);\n  const [userBirthday, setUserBirthday] = useState(user.birthday);\n  const [userPhone, setUserPhone] = useState(user.phone);\n  const [userCity, setUserCity] = useState(user.city);\n\n  const [isEditingName, setIsEditingName] = useState(false);\n  const [isEditingEmail, setIsEditingEmail] = useState(false);\n  const [isEditingBirthday, setIsEditingBirthday] = useState(false);\n  const [isEditingPhone, setIsEditingPhone] = useState(false);\n  const [isEditingCity, setIsEditingCity] = useState(false);\n\n  const [isUpdateForm, setIsUpdateForm] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    city: '',\n    birthday: '',\n    avatarURL: '',\n  });\n\n  useEffect(() => {\n    const storedFormData = localStorage.getItem('formData');\n    if (storedFormData) {\n      setFormData(JSON.parse(storedFormData));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isUpdateForm) {\n      dispatch(currentUser());\n      setIsUpdateForm(null);\n    }\n  }, [dispatch, isUpdateForm]);\n\n  useEffect(() => {\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }, [formData]);\n\n  const handleSubmitInput = async () => {\n\n    const formData = new FormData();\n    formData.append('name', userName);\n    formData.append('email', userEmail);\n    if (userPhone) {\n      formData.append('phone', userPhone);\n    }\n    if (userCity) {\n      formData.append('city', userCity);\n    }\n    if (userBirthday) {\n      formData.append('birthday', userBirthday);\n    }\n\n    if (imgUrl) {\n      formData.append('avatarURL', imgUrl);\n    }\n    await dispatch(updateUser(formData));\n  };\n\n\n  const handleDatePickerClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <TitleCard>My information:</TitleCard>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n          name: formData.name || user?.name || '',\n          email: formData.name || user?.email || '',\n          phone: formData.phone || user?.phone || '',\n          city: formData.phone || user?.city || '',\n        }}\n\n        validationSchema={schema}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          errors,\n          touched,\n        }) => (\n          <FormContainer autoComplete=\"off\" onSubmit={handleSubmitInput}>\n            <ImgCon>\n              <ImgContainer>\n                {imgUrl ? (\n                  <ImgAvatar\n                    src={URL.createObjectURL(imgUrl)}\n                    alt=\"Photo user\"\n                  />\n                ) : (\n                  <Photosvg>\n                    <use href={icons + '#photodefault'} />\n                  </Photosvg>\n                )}\n              </ImgContainer>\n\n              <label\n                htmlFor=\"imgUrl\"\n                onClick={() => setToggleIconPass(CheckBlue)}\n                onSubmit={handleSubmitInput}\n              >\n                {toggleIconPass}\n                <InputAvatar\n                  id=\"imgUrl\"\n                  type=\"file\"\n                  name=\"imgUrl\"\n                  onChange={e => setImgUrl(e.target.files[0])}\n                  accept=\"image/*,.png,.jpg,.gif,.web\"\n                />\n              </label>\n            </ImgCon>\n            <div>\n              <DIV>\n                <Label>Name: </Label>\n                {isEditingName ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"name\"\n                    value={userName}\n                    onChange={e => setUserName(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"text\" name=\"name\" value={userName} />\n                )}\n                {isEditingName ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingName(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingName(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>Email: </Label>\n                {isEditingEmail ? (\n                  <InputContainer\n                    type=\"email\"\n                    name=\"email\"\n                    value={userEmail}\n                    onChange={e => setUserEmail(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"email\" name=\"email\" value={userEmail} />\n                )}\n                {isEditingEmail ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingEmail(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingEmail(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>Birthday: </Label>\n                {isEditingBirthday ? (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    value={userBirthday}\n                    onChange={e => {\n                      setUserBirthday(e.target.value);\n                      handleDatePickerClose();\n                    }}\n                    dateFormat=\"dd/MM/yyyy\"\n                    open={isOpen}\n                    onClickOutside={() => setIsOpen(false)}\n                    onFocus={() => setIsOpen(true)}\n                    showYearDropdown\n                    scrollableYearDropdown\n                  />\n                ) : (\n                  <InputContainer\n                    type=\"date\"\n                    name=\"birthday\"\n                    value={userBirthday}\n                  />\n                )}\n                {isEditingBirthday ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingBirthday(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingBirthday(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n              <DIV>\n                <Label>Phone: </Label>\n                {isEditingPhone ? (\n                  <InputContainer\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={userPhone}\n                    onChange={e => setUserPhone(e.target.value)}\n                    placeholder=\"+380\"\n                  />\n                ) : (\n                  <InputContainer type=\"tel\" name=\"phone\" value={userPhone} />\n                )}\n                {isEditingPhone ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingPhone(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingPhone(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <DIV>\n                <Label>City: </Label>\n                {isEditingCity ? (\n                  <InputContainer\n                    type=\"text\"\n                    name=\"city\"\n                    value={userCity}\n                    onChange={e => setUserCity(e.target.value)}\n                  />\n                ) : (\n                  <InputContainer type=\"text\" name=\"city\" value={userCity} />\n                )}\n                {isEditingCity ? (\n                  <BtnCheck\n                    type=\"submit\"\n                    onClick={() => setIsEditingCity(false)}\n                  >\n                    <SVGBtn>\n                      <use href={icons + '#check'} />\n                    </SVGBtn>\n                  </BtnCheck>\n                ) : (\n                  <BtnCheck onClick={() => setIsEditingCity(true)}>\n                    <BtnEdit>\n                      <use href={icons + '#edit'} />\n                    </BtnEdit>\n                  </BtnCheck>\n                )}\n              </DIV>\n\n              <LogoutBtn />\n            </div>\n          </FormContainer>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","\nimport { UserData } from \"components/UserData/UserData\";\n\nconst User = () => {\n  return (\n    <>\n      <UserData/>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["selectUser","state","auth","user","getConnect","isConnect","Overlay","styled","Modal","props","report","Content","Button","CloseIcon","ModalApproveAction","children","onClose","useEffect","onEscapeClose","event","code","window","addEventListener","document","body","style","overflow","removeEventListener","onClick","target","currentTarget","type","href","icons","ModalContent","TitleModal","ButtonWrap","ButtonYes","Arrow","ArrowBack","BtnLogout","LogoutBtn","useState","isOpenModal","setIsOpenModal","dispatch","useDispatch","toggleModal","isOpen","console","log","logOut","TitleCard","FormContainer","Form","ImgContainer","ImgAvatar","SVG","InputAvatar","Field","BtnPhoto","BtnText","BtnCheck","InputContainer","Label","DIV","SVGBtn","ErrorMessage","BtnEdit","ImgCon","Photosvg","schema","yup","shape","name","max","required","email","matches","birthday","nullable","phone","city","Camera","CheckBlue","UserData","useSelector","toggleIconPass","setToggleIconPass","imgUrl","setImgUrl","userName","setUserName","userEmail","setUserEmail","userBirthday","setUserBirthday","userPhone","setUserPhone","userCity","setUserCity","isEditingName","setIsEditingName","isEditingEmail","setIsEditingEmail","isEditingBirthday","setIsEditingBirthday","isEditingPhone","setIsEditingPhone","isEditingCity","setIsEditingCity","isUpdateForm","setIsUpdateForm","setIsOpen","avatarURL","formData","setFormData","storedFormData","localStorage","getItem","JSON","parse","currentUser","setItem","stringify","handleSubmitInput","FormData","append","updateUser","enableReinitialize","initialValues","validationSchema","values","handleSubmit","handleChange","handleBlur","errors","touched","autoComplete","onSubmit","src","URL","createObjectURL","alt","htmlFor","id","onChange","e","files","accept","value","dateFormat","open","onClickOutside","onFocus","showYearDropdown","scrollableYearDropdown","placeholder"],"sourceRoot":""}