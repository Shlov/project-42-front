{"version":3,"file":"static/js/668.c196c623.chunk.js","mappings":"sOAEaA,EAAeC,EAAAA,GAAAA,IAAH,gPAaZC,EAAaD,EAAAA,GAAAA,GAAH,oJAUVE,EAAaF,EAAAA,GAAAA,EAAH,8GAOVG,EAAaH,EAAAA,GAAAA,IAAH,4GAOVI,EAASJ,EAAAA,GAAAA,OAAH,gmBA2BNK,EAAQL,EAAAA,GAAAA,IAAH,wG,mBC7CLM,EAAc,WAEzB,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAc,WAClBD,GAAe,SAAAE,GAAM,OAAKA,CAAL,GACtB,EAMD,OACE,gCACGH,IACC,SAAC,IAAD,CAAoBI,QAASF,EAA7B,UACE,UAACX,EAAD,YACE,SAACE,EAAD,UAAY,0BACZ,UAACC,EAAD,WAAY,kCACsB,KAChC,8BAAQ,0BAEN,kBAAM,yBAER,kBAAM,kCAGR,UAACC,EAAD,YACE,SAACC,EAAD,CAAQS,KAAK,SAAS,aAAW,SAASC,QAASJ,EAAnD,SAAgE,YAGhE,UAACN,EAAD,CAAQS,KAAK,SAAS,aAAW,MAAMC,QAvB9B,WACnBC,QAAQC,IAAI,kFACb,EAqBW,UAA8D,OAE5D,SAACX,EAAD,WACE,gBAAKY,KAAMC,EAAAA,EAAQ,yBAO/B,mBACEL,KAAK,SACLM,MAAO,CAAEC,aAAc,QAASC,gBAAiB,WACjDP,QAASJ,EAHX,SAIC,2BAKN,EC5DD,EATgB,WACd,OACE,iCACE,wBAAI,aACJ,SAACJ,EAAD,MAGL,C","sources":["components/NoticesPage/NoticesPage.styled.jsx","components/NoticesPage/NoticesPage.js","pages/Notices.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 60px;\n  padding-bottom: 60px;\n\n  font-style: normal;\n  letter-spacing: -0.01em;\n  color: var(--cl-black);\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 38px;\n\n  padding: 0;\n  margin-top: 0px;\n  margin-bottom: 40px;\n`;\n\nexport const DescrModal = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 22px;\n  text-align: center;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 129px;\n  height: 40px;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n\n  border: 2px solid var(--cl-blue-link);\n  border-radius: 40px;\n  color: var(--cl-blue-link);\n  background-color: var(--cl-background);\n\n  transition: background-color var(--animat), color var(--animat),\n    border-color var(--animat);\n\n  &:hover {\n    background-color: var(--cl-blue-link);\n    color: var(--cl-background);\n    border-color: var(--cl-background);\n  }\n`;\n\nexport const Trash = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: transparent;\n`;\n","// Компонент рендериться на маршрут /notices/:categoryName\n// Компонент рендерить:\n//   - форму пошуку NoticesSearch\n//   - блок навігації NoticesCategoriesNav\n//   - блок з фільтрами NoticesFilters\n//   - список оголошень NoticesCategoriesList\n//   - елемент навігації Add pet - переадресовує авторизованого користувача на сторінку AddPetPage\n// Під час першого входу на сторінку користувача повинно переадресовувати на маршрут /notices/sell та рендеритися список оголошень з продажу\n\nimport { ModalAprooveAction } from 'components/ModalApproveAction/ModalApproveAction';\nimport { useState } from 'react';\nimport {\n  Button,\n  ButtonWrap,\n  DescrModal,\n  ModalContent,\n  TitleModal,\n  Trash,\n} from './NoticesPage.styled';\nimport icons from 'images/icons.svg';\n\nexport const NoticesPage = () => {\n  //   toggleModal, яку потрібно передати компоненту ModalAprooveActionб для закриття вікна\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n  };\n\n  const handleAction = () => {\n    console.log('Передаємо екшн');\n  };\n\n  return (\n    <>\n      {isOpenModal && (\n        <ModalAprooveAction onClose={toggleModal}>\n          <ModalContent>\n            <TitleModal>Delete adverstiment?</TitleModal>\n            <DescrModal>\n              Are you sure you want to delete{' '}\n              <strong>\n                “Cute dog looking\n                <br /> for a home”?\n              </strong>\n              <br />\n              You can`t undo this action.\n            </DescrModal>\n            <ButtonWrap>\n              <Button type=\"button\" aria-label=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </Button>\n              <Button type=\"button\" aria-label=\"yes\" onClick={handleAction}>\n                Yes\n                <Trash>\n                  <use href={icons + '#trash'} />\n                </Trash>\n              </Button>\n            </ButtonWrap>\n          </ModalContent>\n        </ModalAprooveAction>\n      )}\n      <button\n        type=\"button\"\n        style={{ marginBottom: '200px', backgroundColor: '#CDDC39' }}\n        onClick={toggleModal}\n      >\n        Temporary Open Modal\n      </button>\n    </>\n  );\n};\n","import { NoticesPage } from \"components/NoticesPage/NoticesPage\";\n\nconst Notices = () => {\n  return (\n    <>\n      <h2>Notices</h2>\n      <NoticesPage/>\n    </>\n  );\n};\n\nexport default Notices;\n"],"names":["ModalContent","styled","TitleModal","DescrModal","ButtonWrap","Button","Trash","NoticesPage","useState","isOpenModal","setIsOpenModal","toggleModal","isOpen","onClose","type","onClick","console","log","href","icons","style","marginBottom","backgroundColor"],"sourceRoot":""}